-- Data Load Tool
-- Template Version 1.30
-- Generated on 2020/08/19 15:31:38 in 0.41 second(s)
-- Parameters:
--   Product = Other
--   Database = Oracle
--   S/W Version = 0-1-0
--   Order Data Load = Yes
--   Default Rows = Yes
--   Pre-Load SQL = Yes
--   Post-Load SQL = Yes
--   Table Pre-Load SQL = Yes
--   Table Post-Load SQL = Yes
--   Include Remarks = Yes
--   Empty Table Data = No
--   Script Type = Insert
--   Data Validation = Yes
--   Ignore Suffix = x
--   Escape Character = **

set define off

-- Pre-Load SQL
Prompt Pre-Load SQL
/* From the file https://shp.swissre.com/sites/corsofinanceit/Data Management Library/0. CorFinGateway/05. Build/02. CorFinGateway Configuration Metadata/ */

-- Pre-Load SQL T_META_TABLE_DQ_CFG
Prompt Pre-Load SQL T_META_TABLE_DQ_CFG
Prompt drop and create empty configuration table for DQ_USER.T_META_TABLE_DQ_CFG

declare
  c int;
  target_table_name varchar(28) := 't_meta_table_dq';
  merge_table_name varchar2(32) := target_table_name || '_cfg';
  target_schema varchar(32) := 'DQ_USER';
begin

  select count(*) into c from all_tables
    where lower(table_name) = merge_table_name
    and lower(owner) = 'DQ_USER';
  if c = 1 then
    execute immediate('drop table ' || target_schema || '.' || merge_table_name);
  end if;
  execute immediate('create table ' || target_schema || '.' || merge_table_name ||
                    ' as select TABLE_ID, DQ_PURPOSE, DQ_CORRECTIVE_ACTION, DQ_CONTACT_TEAM, DQ_USE_CASE_ID, DQ_SEVERITY_ID, DQ_RULE_TYPE, DQ_RULE_CATEGORY, DQ_METHOD, DQ_FUNCTION_ID, DQ_MESSAGE_ID, DQ_FUNCTION_PARAMETERS, DQ_WHERE_CLAUSE, DQ_JOIN, DQ_CONDITION_ID, DQ_COLUMN_NAME, DQ_ACTIVE_INDICATOR, DQ_USER_ROLE,  LAST_UPDATED, USER_ID
 from ' || target_schema || '.' ||
                    target_table_name || ' where 1=0');
end;
/

-- Populate DQ_USER.T_META_TABLE_DQ_CFG
Prompt Populate DQ_USER.T_META_TABLE_DQ_CFG
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that AMOUNT_DEBIT is a correctly formated number','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ADY_PAYROLL_IN') and table_name = 'T_ADY_PAYROLL_IN')))),'ALL',4,'T','ROW','FUNCTION',6,6,'AMOUNT_DEBIT',NULL,NULL,NULL,'AMOUNT_DEBIT','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ADY_PAYROLL_IN') and table_name = 'T_ADY_PAYROLL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that AMOUNT_CREDIT is a correctly formated number','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ADY_PAYROLL_IN') and table_name = 'T_ADY_PAYROLL_IN')))),'ALL',4,'T','ROW','FUNCTION',6,6,'AMOUNT_CREDIT',NULL,NULL,NULL,'AMOUNT_CREDIT','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ADY_PAYROLL_IN') and table_name = 'T_ADY_PAYROLL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that REPORT_DATE is a correctly formated date','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ADY_PAYROLL_IN') and table_name = 'T_ADY_PAYROLL_IN')))),'ALL',4,'T','ROW','FUNCTION',5,5,'REPORT_DATE,''DD/MM/YYYY''',NULL,NULL,NULL,'REPORT_DATE','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ADY_PAYROLL_IN') and table_name = 'T_ADY_PAYROLL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that PAY_CYCLE is a correctly formated date','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ADY_PAYROLL_IN') and table_name = 'T_ADY_PAYROLL_IN')))),'ALL',4,'T','ROW','FUNCTION',5,5,'PAY_CYCLE,''DD/MM/YYYY''',NULL,NULL,NULL,'PAY_CYCLE','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ADY_PAYROLL_IN') and table_name = 'T_ADY_PAYROLL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that the number of transactions loaded matches the control record in T_FILE_CONTROL','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ADY_PAYROLL_IN') and table_name = 'T_ADY_PAYROLL_IN')))),'ALL',4,'T','TOTALS','FUNCTION',12,12,'SESSION_ID',NULL,NULL,NULL,'SESSION_ID','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ADY_PAYROLL_IN') and table_name = 'T_ADY_PAYROLL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_CURRENCY to map CURRENCY in T_ADY_PAYROLL_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ADY_PAYROLL_IN') and table_name = 'T_ADY_PAYROLL_IN')))),'ALL',5,'B','ROW','FUNCTION',8,8,'CURRENCY, ''CRNCY_CD'', ''REF_CURRENCY'',''ACTIVE_INDICATOR = ''''Active''''''',NULL,NULL,NULL,'CURRENCY','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ADY_PAYROLL_IN') and table_name = 'T_ADY_PAYROLL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_COST_CENTRE to map COST_CENTER_CODE in T_ADY_PAYROLL_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ADY_PAYROLL_IN') and table_name = 'T_ADY_PAYROLL_IN')))),'ALL',5,'B','ROW','FUNCTION',8,8,'COST_CENTER_CODE, ''COST_CNTR_CD'', ''REF_COST_CENTRE'',''TO_DATE(''''''||PAY_CYCLE||'''''', ''''DD/MM/YYYY'''') BETWEEN ACTIVE_FROM_DATE AND ACTIVE_TO_DATE ''',NULL,NULL,NULL,'COST_CENTER_CODE','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ADY_PAYROLL_IN') and table_name = 'T_ADY_PAYROLL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check if DR and CR amounts net to 0 by currency, legal entity and effective date ','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ADY_PAYROLL_IN') and table_name = 'T_ADY_PAYROLL_IN')))),'ALL',4,'T','TOTALS','FUNCTION',13,13,'SESSION_ID, ''T_ADY_PAYROLL_IN''',NULL,NULL,NULL,'AMOUNT_DEBIT|AMOUNT_CREDIT','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ADY_PAYROLL_IN') and table_name = 'T_ADY_PAYROLL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_GL_ACCOUNT to map GL_ACCOUNT in T_ADY_PAYROLL_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ADY_PAYROLL_IN') and table_name = 'T_ADY_PAYROLL_IN')))),'ALL',5,'B','ROW','FUNCTION',21,21,'ltrim ( GL_ACCOUNT, ''0''), ''ACCT_CD'', ''REF_GL_ACCOUNT''',NULL,NULL,NULL,'GL_ACCOUNT','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ADY_PAYROLL_IN') and table_name = 'T_ADY_PAYROLL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in V_GM006_ADY_TO_CORSO_LEGAL_ENT to map ENTITY_ID in T_ADY_PAYROLL_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ADY_PAYROLL_IN') and table_name = 'T_ADY_PAYROLL_IN')))),'ALL',5,'B','ROW','FUNCTION',11,11,'''6'', ENTITY_ID',NULL,NULL,NULL,'ENTITY_ID','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ADY_PAYROLL_IN') and table_name = 'T_ADY_PAYROLL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in V_GM009_SBCCNT to map SOURCE_SYSTEM in T_ADY_PAYROLL_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ADY_PAYROLL_IN') and table_name = 'T_ADY_PAYROLL_IN')))),'ALL',5,'B','ROW','FUNCTION',11,11,'''9'', SOURCE_SYSTEM',NULL,NULL,NULL,'SOURCE_SYSTEM','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ADY_PAYROLL_IN') and table_name = 'T_ADY_PAYROLL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_COMBINED_ACCORDION to map FININST_CD in T_ASL_DISCOUNT_FACTORS_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ASL_DISCOUNT_FACTORS_IN') and table_name = 'T_ASL_DISCOUNT_FACTORS_IN')))),'ALL',2,'B','ROW','FUNCTION',8,8,'FININST_CD, ''DOMAIN_CODE'', ''REF_COMBINED_ACCORDION'',''ACTIVE_INDICATOR = ''''Active'''' AND MASTER_DATA_ID = 11532335''',NULL,NULL,NULL,'FININST_CD','A',NULL,'S3PP5N',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ASL_DISCOUNT_FACTORS_IN') and table_name = 'T_ASL_DISCOUNT_FACTORS_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that COMPLETED_ON is a correctly formated date','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ERS_INVOICE_PAYMENTS_IN') and table_name = 'T_ERS_INVOICE_PAYMENTS_IN')))),'ALL',4,'T','ROW','FUNCTION',5,5,'COMPLETED_ON,''DD.MM.YYYY''',NULL,NULL,NULL,'COMPLETED_ON','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ERS_INVOICE_PAYMENTS_IN') and table_name = 'T_ERS_INVOICE_PAYMENTS_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that AMOUNT_IN_LOCAL_CURRENCY is a correctly formated number','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ERS_INVOICE_PAYMENTS_IN') and table_name = 'T_ERS_INVOICE_PAYMENTS_IN')))),'ALL',4,'T','ROW','FUNCTION',6,6,'AMOUNT_IN_LOCAL_CURRENCY',NULL,NULL,NULL,'AMOUNT_IN_LOCAL_CURRENCY','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ERS_INVOICE_PAYMENTS_IN') and table_name = 'T_ERS_INVOICE_PAYMENTS_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_CURRENCY to map LOCAL_CURRENCY in T_ERS_INVOICE_PAYMENTS_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ERS_INVOICE_PAYMENTS_IN') and table_name = 'T_ERS_INVOICE_PAYMENTS_IN')))),'ALL',5,'B','ROW','FUNCTION',8,8,'LOCAL_CURRENCY, ''CRNCY_CD'', ''REF_CURRENCY'',''ACTIVE_INDICATOR = ''''Active''''''',NULL,NULL,NULL,'LOCAL_CURRENCY','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ERS_INVOICE_PAYMENTS_IN') and table_name = 'T_ERS_INVOICE_PAYMENTS_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_COST_CENTRE to map COST_CENTRE|COMPLETED_ON in T_ERS_INVOICE_PAYMENTS_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ERS_INVOICE_PAYMENTS_IN') and table_name = 'T_ERS_INVOICE_PAYMENTS_IN')))),'ALL',5,'B','ROW','FUNCTION',8,8,'COST_CENTRE, ''COST_CNTR_CD'', ''REF_COST_CENTRE'',''TO_DATE(''''''||COMPLETED_ON||'''''', ''''DD.MM.YYYY'''') BETWEEN ACTIVE_FROM_DATE AND ACTIVE_TO_DATE ''',NULL,NULL,NULL,'COST_CENTRE|COMPLETED_ON','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ERS_INVOICE_PAYMENTS_IN') and table_name = 'T_ERS_INVOICE_PAYMENTS_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in V_GM068_LDGR_2_CRS_LDGR to map LEDGER in T_ERS_INVOICE_PAYMENTS_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ERS_INVOICE_PAYMENTS_IN') and table_name = 'T_ERS_INVOICE_PAYMENTS_IN')))),'ALL',5,'B','ROW','FUNCTION',11,11,'''68'', LEDGER',NULL,NULL,NULL,'LEDGER','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ERS_INVOICE_PAYMENTS_IN') and table_name = 'T_ERS_INVOICE_PAYMENTS_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in V_GM070_XPNSE_2_CRS_ACC to map BUCO_CODE in T_ERS_INVOICE_PAYMENTS_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ERS_INVOICE_PAYMENTS_IN') and table_name = 'T_ERS_INVOICE_PAYMENTS_IN')))),'ALL',5,'B','ROW','FUNCTION',11,11,'''70'', BUCO_CODE',NULL,NULL,NULL,'BUCO_CODE','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_ERS_INVOICE_PAYMENTS_IN') and table_name = 'T_ERS_INVOICE_PAYMENTS_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_COMBINED_ACCORDION to map ROLL_FORWARD_CODE_ID in T_FA0_INVESTMENT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN')))),'ALL',5,'B','ROW','FUNCTION',8,8,'ROLL_FORWARD_CODE_ID, ''DOMAIN_CODE'', ''REF_COMBINED_ACCORDION'', ''ACTIVE_INDICATOR = ''''Active'''' AND MASTER_DATA_ID = 101542''',NULL,NULL,NULL,'ROLL_FORWARD_CODE_ID','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_COMBINED_ACCORDION to map FINDE in T_FA0_INVESTMENT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN')))),'ALL',5,'B','ROW','FUNCTION',8,8,'FINDE, ''DOMAIN_CODE'', ''REF_COMBINED_ACCORDION'', ''ACTIVE_INDICATOR = ''''Active'''' AND MASTER_DATA_ID = 100922''',NULL,NULL,NULL,'FINDE','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_CURRENCY to map CURRENCY_ORIGINAL in T_FA0_INVESTMENT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN')))),'ALL',5,'B','ROW','FUNCTION',8,8,'CURRENCY_ORIGINAL, ''CRNCY_CD'', ''REF_CURRENCY'',''ACTIVE_INDICATOR = ''''Active''''''',NULL,NULL,NULL,'CURRENCY_ORIGINAL','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_COMBINED_ACCORDION to map FX_REMEASUREMENT in T_FA0_INVESTMENT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN')))),'ALL',5,'B','ROW','FUNCTION',8,8,'FX_REMEASUREMENT, ''DOMAIN_CODE'', ''REF_COMBINED_ACCORDION'',''ACTIVE_INDICATOR = ''''Active'''' AND MASTER_DATA_ID = 1006211''',NULL,NULL,NULL,'FX_REMEASUREMENT','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_COMBINED_ACCORDION to map DIVISION in T_FA0_INVESTMENT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN')))),'ALL',5,'B','ROW','FUNCTION',8,8,'DIVISION, ''DOMAIN_CODE'', ''REF_COMBINED_ACCORDION'', ''ACTIVE_INDICATOR = ''''Active'''' AND MASTER_DATA_ID = 100810''',NULL,NULL,NULL,'DIVISION','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_COMBINED_ACCORDION to map MU in T_FA0_INVESTMENT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN')))),'ALL',5,'B','ROW','FUNCTION',8,8,'MU, ''DOMAIN_CODE'', ''REF_COMBINED_ACCORDION'', ''ACTIVE_INDICATOR = ''''Active'''' AND MASTER_DATA_ID = 101204''',NULL,NULL,NULL,'MU','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_COMBINED_ACCORDION to map BUSINESS_PARTNER in T_FA0_INVESTMENT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN')))),'ALL',5,'B','ROW','FUNCTION',8,8,'BUSINESS_PARTNER, ''DOMAIN_CODE'', ''REF_COMBINED_ACCORDION'', ''MASTER_DATA_ID = 100040''',NULL,NULL,NULL,'BUSINESS_PARTNER','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_COMBINED_ACCORDION to map PRODUCT_CODE in T_FA0_INVESTMENT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN')))),'ALL',5,'B','ROW','FUNCTION',8,8,'PRODUCT_CODE, ''DOMAIN_CODE'', ''REF_COMBINED_ACCORDION'', ''ACTIVE_INDICATOR = ''''Active'''' AND MASTER_DATA_ID = 1023069''',NULL,NULL,NULL,'PRODUCT_CODE','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_COMBINED_ACCORDION to map IC in T_FA0_INVESTMENT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN')))),'ALL',5,'B','ROW','FUNCTION',8,8,'IC, ''DOMAIN_CODE'', ''REF_COMBINED_ACCORDION'', ''ACTIVE_INDICATOR = ''''Active'''' AND MASTER_DATA_ID = 1021981''',NULL,NULL,NULL,'IC','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_CURRENCY to map CURRENCY_REPORTING in T_FA0_INVESTMENT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN')))),'ALL',5,'B','ROW','FUNCTION',8,8,'CURRENCY_REPORTING, ''CRNCY_CD'', ''REF_CURRENCY'',''ACTIVE_INDICATOR = ''''Active''''''',NULL,NULL,NULL,'CURRENCY_REPORTING','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_CURRENCY to map CURRENCY_FUNCTIONAL in T_FA0_INVESTMENT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN')))),'ALL',5,'B','ROW','FUNCTION',8,8,'CURRENCY_FUNCTIONAL, ''CRNCY_CD'', ''REF_CURRENCY'',''ACTIVE_INDICATOR = ''''Active''''''',NULL,NULL,NULL,'CURRENCY_FUNCTIONAL','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_COMBINED_ACCORDION to map ISSUER_FSA_L2_CODE in T_FA0_INVESTMENT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN')))),'ALL',5,'B','ROW','FUNCTION',8,8,'ISSUER_FSA_L2_CODE, ''DOMAIN_CODE'', ''REF_COMBINED_ACCORDION'', ''ACTIVE_INDICATOR = ''''Active'''' AND MASTER_DATA_ID = 101122''',NULL,NULL,NULL,'ISSUER_FSA_L2_CODE','A',NULL,'S2EW36',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check if DR and CR amounts net to 0 by currency, legal entity and effective date ','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN')))),'ALL',4,'T','TOTALS','FUNCTION',13,13,'SESSION_ID, ''T_FA0_INVESTMENT_IN''',NULL,NULL,NULL,'AMOUNT_OC|AMOUNT_FC','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that the sum of ROLL_FORWARD_CODE_IDs 11137 (Other Movements) and 11139 (Reclassifications) net to  zero for ACCOUNT_FSA_CODE_ID 2502005','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN')))),'ALL',4,'T','TOTALS','FUNCTION',3,3,'SESSION_ID, ''(ROLL_FORWARD_CODE_ID = ''''11137'''' OR ROLL_FORWARD_CODE_ID = ''''11139'''') AND ACCOUNT_FSA_CODE_ID  = ''''2502005''''''',NULL,NULL,1,'ROLL_FORWARD_CODE_ID|ACCOUNT_FSA_CODE_ID','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in V_GM003_CORSO_ACCT to map ACCOUNT_FSA_CODE_ID|INVCAT|ACCOUNT_SUB_CODE in T_FA0_INVESTMENT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN')))),'ALL',5,'B','ROW','FUNCTION',11,11,'''3'', ACCOUNT_FSA_CODE_ID, NVL(INVCAT,''N/A''), ACCOUNT_SUB_CODE',NULL,NULL,NULL,'ACCOUNT_FSA_CODE_ID|INVCAT|ACCOUNT_SUB_CODE','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in V_GM041_ACCT_VALN_BASIS to map ACCOUNTING_BASIS_CODE_ID in T_FA0_INVESTMENT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN')))),'ALL',5,'B','ROW','FUNCTION',11,11,'''41'', ACCOUNTING_BASIS_CODE_ID',NULL,NULL,NULL,'ACCOUNTING_BASIS_CODE_ID','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in V_GM009_SBCCNT to map SOURCE_SYSTEM in T_FA0_INVESTMENT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN')))),'ALL',5,'B','ROW','FUNCTION',11,11,'''9'', SOURCE_SYSTEM',NULL,NULL,NULL,'SOURCE_SYSTEM','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in V_GM035_SRAM_TRAN_PRTNR to map BUSINESS_PARTNER in T_FA0_INVESTMENT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN')))),'ALL',1,'B','ROW','FUNCTION',11,11,'''35'', BUSINESS_PARTNER',NULL,NULL,NULL,'BUSINESS_PARTNER','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in V_GM004_SRAM_LGL_ENTY to map LEGAL_ENTITY_CODE in T_FA0_INVESTMENT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN')))),'ALL',5,'B','ROW','FUNCTION',11,11,'''4'', LEGAL_ENTITY_CODE',NULL,NULL,NULL,'LEGAL_ENTITY_CODE','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_CURRENCY to map CURRENCY_FUNCTIONAL in T_FA0_INVESTMENT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN')))),'ALL',5,'B','ROW','FUNCTION',14,14,'CURRENCY_FUNCTIONAL, ''CRNCY_CD'', ''REF_CURRENCY_DP''',NULL,NULL,NULL,'CURRENCY_FUNCTIONAL','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_CURRENCY to map CURRENCY_ORIGINAL in T_FA0_INVESTMENT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN')))),'ALL',5,'B','ROW','FUNCTION',14,14,'CURRENCY_ORIGINAL, ''CRNCY_CD'', ''REF_CURRENCY_DP''',NULL,NULL,NULL,'CURRENCY_ORIGINAL','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check if the sessions transactions net to 0 by valuation basis','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN')))),'ALL',4,'T','TOTALS','FUNCTION',9,9,'SESSION_ID, ''T_FA0_INVESTMENT_IN''',NULL,NULL,NULL,'AMOUNT_OC','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FA0_INVESTMENT_IN') and table_name = 'T_FA0_INVESTMENT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_COMBINED_ACCORDION to map TOA in T_G24_LAG_FCTR_PTTRNS_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_LAG_FCTR_PTTRNS_IN') and table_name = 'T_G24_LAG_FCTR_PTTRNS_IN')))),'ALL',2,'B','ROW','FUNCTION',26,26,'''TOA'',''BETT'',''V_GM005_TOA_TO_BETT'',TOA,''NVL(FWH, ''''0'''') = ''''0'''''',''REF_COMBINED_ACCORDION'',''DOMAIN_CODE'',null',NULL,NULL,NULL,'TOA','A',NULL,'S63YTE',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_LAG_FCTR_PTTRNS_IN') and table_name = 'T_G24_LAG_FCTR_PTTRNS_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_COMBINED_ACCORDION to map TOA in T_G24_STATIS_PF_LDNGS_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_STATIS_PF_LDNGS_IN') and table_name = 'T_G24_STATIS_PF_LDNGS_IN')))),'ALL',2,'B','ROW','FUNCTION',26,26,'''TOA'',''BETT'',''V_GM005_TOA_TO_BETT'',TOA,''NVL(FWH, ''''0'''') = ''''0'''''',''REF_COMBINED_ACCORDION'',''DOMAIN_CODE'',null',NULL,NULL,NULL,'TOA','A',NULL,'S63YTE',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_STATIS_PF_LDNGS_IN') and table_name = 'T_G24_STATIS_PF_LDNGS_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that SSPSTATE is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_STATIS_PF_STAT_IN') and table_name = 'T_G24_STATIS_PF_STAT_IN')))),'ALL',3,'T','ROW','FUNCTION',1,1,'SSPSTATE',NULL,NULL,NULL,'SSPSTATE','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_STATIS_PF_STAT_IN') and table_name = 'T_G24_STATIS_PF_STAT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that STATKEY is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_STATIS_PF_STAT_IN') and table_name = 'T_G24_STATIS_PF_STAT_IN')))),'ALL',3,'T','ROW','FUNCTION',1,1,'STATKEY',NULL,NULL,NULL,'STATKEY','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_STATIS_PF_STAT_IN') and table_name = 'T_G24_STATIS_PF_STAT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that STATVKEY is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_STATIS_PF_STAT_IN') and table_name = 'T_G24_STATIS_PF_STAT_IN')))),'ALL',3,'T','ROW','FUNCTION',1,1,'STATVKEY',NULL,NULL,NULL,'STATVKEY','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_STATIS_PF_STAT_IN') and table_name = 'T_G24_STATIS_PF_STAT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in V_GM005_TOA_TO_BETT to map PATT_TOA in T_G24_TG13X14I_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_TG13X14I_IN') and table_name = 'T_G24_TG13X14I_IN')))),'ALL',2,'B','ROW','FUNCTION',21,21,'PATT_TOA,''TOA'',''V_GM005_TOA_TO_BETT''',NULL,NULL,NULL,'PATT_TOA','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_TG13X14I_IN') and table_name = 'T_G24_TG13X14I_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_COMBINED_ACCORDION to map PATT_TOA in T_G24_TG13X14I_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_TG13X14I_IN') and table_name = 'T_G24_TG13X14I_IN')))),'ALL',2,'B','ROW','FUNCTION',26,26,'''TOA'',''BETT'',''V_GM005_TOA_TO_BETT'',PATT_TOA,''NVL(FWH, ''''0'''') = ''''0'''''',''REF_COMBINED_ACCORDION'',''DOMAIN_CODE'',null',NULL,NULL,NULL,'PATT_TOA','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_TG13X14I_IN') and table_name = 'T_G24_TG13X14I_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_LINE_OF_BUSINESS to map LOBH in T_G24_TG13X16I_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_TG13X16I_IN') and table_name = 'T_G24_TG13X16I_IN')))),'ALL',2,'B','ROW','FUNCTION',21,21,'LOBH, ''LINE_BUS_CD'', ''REF_LINE_OF_BUSINESS''',NULL,NULL,NULL,'LOBH','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_TG13X16I_IN') and table_name = 'T_G24_TG13X16I_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_LEGAL_ENTITY to map CLENTITY in T_G24_TG13X16I_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_TG13X16I_IN') and table_name = 'T_G24_TG13X16I_IN')))),'ALL',2,'B','ROW','FUNCTION',21,21,'CLENTITY, ''LGL_ENTY_CD'', ''REF_LEGAL_ENTITY''',NULL,NULL,NULL,'CLENTITY','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_TG13X16I_IN') and table_name = 'T_G24_TG13X16I_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_PROFIT_CENTRE to map PC in T_G24_TG13X16I_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_TG13X16I_IN') and table_name = 'T_G24_TG13X16I_IN')))),'ALL',2,'B','ROW','FUNCTION',21,21,'PC, ''PRFT_CNTR_CD'', ''REF_PROFIT_CENTRE''',NULL,NULL,NULL,'PC','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_TG13X16I_IN') and table_name = 'T_G24_TG13X16I_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_COMBINED_ACCORDION to map POLTYPE in T_G24_TG13X16I_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_TG13X16I_IN') and table_name = 'T_G24_TG13X16I_IN')))),'ALL',2,'B','ROW','FUNCTION',21,21,'POLTYPE, ''DOMAIN_CODE'', ''REF_COMBINED_ACCORDION'',''MASTER_DATA_ID = 2001383''',NULL,NULL,NULL,'POLTYPE','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_TG13X16I_IN') and table_name = 'T_G24_TG13X16I_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_GLOBAL_LOSS_EVENT to map HLLID in T_G24_TG13X16I_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_TG13X16I_IN') and table_name = 'T_G24_TG13X16I_IN')))),'ALL',2,'B','ROW','FUNCTION',21,21,'HLLID, ''GLOB_LOSS_EVT_ID'', ''REF_GLOBAL_LOSS_EVENT''',NULL,NULL,NULL,'HLLID','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_TG13X16I_IN') and table_name = 'T_G24_TG13X16I_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in V_GM093_CORDL_TO_CBASIS to map CBASIS in T_G24_TG13X16I_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_TG13X16I_IN') and table_name = 'T_G24_TG13X16I_IN')))),'ALL',2,'B','ROW','FUNCTION',21,21,'CBASIS, ''LFD_CBASIS'', ''V_GM093_CORDL_TO_CBASIS'',''MAPPING_TYPE_ID = 93''',NULL,NULL,NULL,'CBASIS','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_TG13X16I_IN') and table_name = 'T_G24_TG13X16I_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in V_GM108_LFD_TO_BUS_PARTIC_TYP to map TOBH in T_G24_TG13X16I_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_TG13X16I_IN') and table_name = 'T_G24_TG13X16I_IN')))),'ALL',2,'B','ROW','FUNCTION',21,21,'TOBH , ''TOBH '',''V_GM108_LFD_TO_BUS_PARTIC_TYP'',''MAPPING_TYPE_ID = 108''',NULL,NULL,NULL,'TOBH','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G24_TG13X16I_IN') and table_name = 'T_G24_TG13X16I_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_COMBINED_ACCORDION to map TOA in T_G32_FACTUAL_EXPORT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G32_FACTUAL_EXPORT_IN') and table_name = 'T_G32_FACTUAL_EXPORT_IN')))),'ALL',2,'B','ROW','FUNCTION',26,26,'''TOA'',''BETT'',''V_GM005_TOA_TO_BETT'',TOA,''NVL(FWH, ''''0'''') = ''''0'''''',''REF_COMBINED_ACCORDION'',''DOMAIN_CODE'',null',NULL,NULL,NULL,'TOA','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G32_FACTUAL_EXPORT_IN') and table_name = 'T_G32_FACTUAL_EXPORT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in V_GM108_LFD_TO_BUS_PARTIC_TYP to map TOBHCOV in T_G32_FACTUAL_EXPORT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G32_FACTUAL_EXPORT_IN') and table_name = 'T_G32_FACTUAL_EXPORT_IN')))),'ALL',2,'B','ROW','FUNCTION',21,21,'decode ( TOBHCOV, ''<NA>'', '''', trim(TOBHCOV)), ''TOBH '',''V_GM108_LFD_TO_BUS_PARTIC_TYP'',''MAPPING_TYPE_ID = 108''',NULL,NULL,NULL,'TOBHCOV','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G32_FACTUAL_EXPORT_IN') and table_name = 'T_G32_FACTUAL_EXPORT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in V_GM109_LFD_TO_CLM_BASIS_COVR to map CLBASASL in T_G32_FACTUAL_EXPORT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G32_FACTUAL_EXPORT_IN') and table_name = 'T_G32_FACTUAL_EXPORT_IN')))),'ALL',2,'B','ROW','FUNCTION',21,21,'decode ( CLBASASL, ''<NA>'', '''', trim(CLBASASL)), ''CLBASASL'', ''V_GM109_LFD_TO_CLM_BASIS_COVR'',''MAPPING_TYPE_ID = 109''',NULL,NULL,NULL,'CLBASASL','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G32_FACTUAL_EXPORT_IN') and table_name = 'T_G32_FACTUAL_EXPORT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_GLOBAL_LOSS_EVENT to map HLLID in T_G32_FACTUAL_EXPORT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G32_FACTUAL_EXPORT_IN') and table_name = 'T_G32_FACTUAL_EXPORT_IN')))),'ALL',2,'B','ROW','FUNCTION',21,21,'decode ( HLLID, ''<NA>'', '''', HLLID), ''GLOB_LOSS_EVT_ID'', ''REF_GLOBAL_LOSS_EVENT''',NULL,NULL,NULL,'HLLID','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G32_FACTUAL_EXPORT_IN') and table_name = 'T_G32_FACTUAL_EXPORT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_LINE_OF_BUSINESS to map LOBH in T_G32_FACTUAL_EXPORT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G32_FACTUAL_EXPORT_IN') and table_name = 'T_G32_FACTUAL_EXPORT_IN')))),'ALL',2,'B','ROW','FUNCTION',21,21,'decode ( LOBH, ''<NA>'', '''', trim(LOBH)), ''LINE_BUS_CD'', ''REF_LINE_OF_BUSINESS''',NULL,NULL,NULL,'LOBH','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G32_FACTUAL_EXPORT_IN') and table_name = 'T_G32_FACTUAL_EXPORT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that USE_CASE_ID is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G32_ORDER_REQUEST_IN') and table_name = 'T_G32_ORDER_REQUEST_IN')))),'ACQUIRE_G32',1,'B','ROW','FUNCTION',1,1,'USE_CASE_ID',NULL,NULL,NULL,'USE_CASE_ID','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G32_ORDER_REQUEST_IN') and table_name = 'T_G32_ORDER_REQUEST_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that REQUEST|IGR_CALCULATED|IGR_BOOKED_INWARD|IGR_BOOKED_OUTWARD in T_G32_ORDER_REQUEST_IN are valid request attributes','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G32_ORDER_REQUEST_IN') and table_name = 'T_G32_ORDER_REQUEST_IN')))),'ALL',3,'B','ROW','FUNCTION',28,28,'REQUEST, IGR_CALCULATED, IGR_BOOKED_INWARD, IGR_BOOKED_OUTWARD',NULL,NULL,NULL,'REQUEST|IGR_CALCULATED|IGR_BOOKED_INWARD|IGR_BOOKED_OUTWARD','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G32_ORDER_REQUEST_IN') and table_name = 'T_G32_ORDER_REQUEST_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that DUEDATE is a correctly formated date','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G61_COST_TRANSPARENCY_IN') and table_name = 'T_G61_COST_TRANSPARENCY_IN')))),'ALL',4,'T','ROW','FUNCTION',5,5,'DUEDATE,''YYYYMMDD''',NULL,NULL,NULL,'DUEDATE','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G61_COST_TRANSPARENCY_IN') and table_name = 'T_G61_COST_TRANSPARENCY_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that DOCAMOUNT is a correctly formated number','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G61_COST_TRANSPARENCY_IN') and table_name = 'T_G61_COST_TRANSPARENCY_IN')))),'ALL',4,'T','ROW','FUNCTION',6,6,'DOCAMOUNT',NULL,NULL,NULL,'DOCAMOUNT','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G61_COST_TRANSPARENCY_IN') and table_name = 'T_G61_COST_TRANSPARENCY_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that LASTDATE is a correctly formated date','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G61_COST_TRANSPARENCY_IN') and table_name = 'T_G61_COST_TRANSPARENCY_IN')))),'ALL',4,'T','ROW','FUNCTION',5,5,'LASTDATE,''YYYYMMDD''',NULL,NULL,NULL,'LASTDATE','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G61_COST_TRANSPARENCY_IN') and table_name = 'T_G61_COST_TRANSPARENCY_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_LEGAL_ENTITY to map ENTITY_ID in T_G61_COST_TRANSPARENCY_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G61_COST_TRANSPARENCY_IN') and table_name = 'T_G61_COST_TRANSPARENCY_IN')))),'ALL',5,'B','ROW','FUNCTION',8,8,'ENTITY_ID, ''LGL_ENTY_SDL'', ''REF_LEGAL_ENTITY'',''ACTIVE_INDICATOR = ''''Active''''''',NULL,NULL,NULL,'ENTITY_ID','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G61_COST_TRANSPARENCY_IN') and table_name = 'T_G61_COST_TRANSPARENCY_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_COST_CENTRE to map COSTCENTER|LASTDATE in T_G61_COST_TRANSPARENCY_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G61_COST_TRANSPARENCY_IN') and table_name = 'T_G61_COST_TRANSPARENCY_IN')))),'ALL',5,'B','ROW','FUNCTION',8,8,'COSTCENTER, ''COST_CNTR_CD'', ''REF_COST_CENTRE'',''TO_DATE(''''''||LASTDATE||'''''', ''''YYYYMMDD'''') BETWEEN ACTIVE_FROM_DATE AND ACTIVE_TO_DATE ''',NULL,NULL,NULL,'COSTCENTER|LASTDATE','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G61_COST_TRANSPARENCY_IN') and table_name = 'T_G61_COST_TRANSPARENCY_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_CURRENCY to map DOCCURR in T_G61_COST_TRANSPARENCY_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G61_COST_TRANSPARENCY_IN') and table_name = 'T_G61_COST_TRANSPARENCY_IN')))),'ALL',5,'B','ROW','FUNCTION',8,8,'DOCCURR, ''CRNCY_CD'', ''REF_CURRENCY'',''ACTIVE_INDICATOR = ''''Active''''''',NULL,NULL,NULL,'DOCCURR','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G61_COST_TRANSPARENCY_IN') and table_name = 'T_G61_COST_TRANSPARENCY_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_BUSINESS_PARTNER to map BPCODE in T_G61_COST_TRANSPARENCY_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G61_COST_TRANSPARENCY_IN') and table_name = 'T_G61_COST_TRANSPARENCY_IN')))),'ALL',5,'B','ROW','FUNCTION',8,8,'BPCODE, ''PRTNR_SDL'', ''REF_BUSINESS_PARTNER''',NULL,NULL,NULL,'BPCODE','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G61_COST_TRANSPARENCY_IN') and table_name = 'T_G61_COST_TRANSPARENCY_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check if DR and CR amounts net to 0 by currency, legal entity and effective date ','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G61_COST_TRANSPARENCY_IN') and table_name = 'T_G61_COST_TRANSPARENCY_IN')))),'ALL',4,'T','TOTALS','FUNCTION',13,13,'SESSION_ID, ''T_G61_COST_TRANSPARENCY_IN''',NULL,NULL,NULL,'DOCAMOUNT','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G61_COST_TRANSPARENCY_IN') and table_name = 'T_G61_COST_TRANSPARENCY_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in V_GM064_SAPT_TO_LDGR_CO to map ENTITY_ID in T_G61_COST_TRANSPARENCY_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G61_COST_TRANSPARENCY_IN') and table_name = 'T_G61_COST_TRANSPARENCY_IN')))),'ALL',5,'B','ROW','FUNCTION',11,11,'''64'', ENTITY_ID',NULL,NULL,NULL,'ENTITY_ID','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G61_COST_TRANSPARENCY_IN') and table_name = 'T_G61_COST_TRANSPARENCY_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in V_GM063_SAP_CT_TO_CORSO_ACCOUN to map SAPACCOUNT in T_G61_COST_TRANSPARENCY_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G61_COST_TRANSPARENCY_IN') and table_name = 'T_G61_COST_TRANSPARENCY_IN')))),'ALL',5,'B','ROW','FUNCTION',11,11,'''63'', SAPACCOUNT',NULL,NULL,NULL,'SAPACCOUNT','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G61_COST_TRANSPARENCY_IN') and table_name = 'T_G61_COST_TRANSPARENCY_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in V_GM016_TRAN_PRTNR to map BPCODE in T_G61_COST_TRANSPARENCY_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G61_COST_TRANSPARENCY_IN') and table_name = 'T_G61_COST_TRANSPARENCY_IN')))),'ALL',5,'B','ROW','FUNCTION',11,11,'''16'', BPCODE',NULL,NULL,NULL,'BPCODE','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G61_COST_TRANSPARENCY_IN') and table_name = 'T_G61_COST_TRANSPARENCY_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that USE_CASE_ID is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_CLAIM_IN') and table_name = 'T_G71_CLAIM_IN')))),'ACQUIRE_G71',1,'B','ROW','FUNCTION',1,1,'USE_CASE_ID',NULL,NULL,NULL,'USE_CASE_ID','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_CLAIM_IN') and table_name = 'T_G71_CLAIM_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_CURRENCY_DP to map DEAL_CRNCY_ISO_CD in T_G71_DEAL_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_DEAL_IN') and table_name = 'T_G71_DEAL_IN')))),'ACQUIRE_G71',5,'B','ROW','FUNCTION',14,14,'DEAL_CRNCY_ISO_CD, ''CRNCY_CD'', ''REF_CURRENCY_DP''',NULL,NULL,NULL,'DEAL_CRNCY_ISO_CD','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_DEAL_IN') and table_name = 'T_G71_DEAL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that USE_CASE_ID is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_DEAL_IN') and table_name = 'T_G71_DEAL_IN')))),'ACQUIRE_G71',1,'B','ROW','FUNCTION',1,1,'USE_CASE_ID',NULL,NULL,NULL,'USE_CASE_ID','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_DEAL_IN') and table_name = 'T_G71_DEAL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Don''t process new contracts that are already cancelled','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_DEAL_IN') and table_name = 'T_G71_DEAL_IN')))),'ACQUIRE_G71',3,'B','ROW','FUNCTION',25,25,'''T_G71_DEAL_IN'', GATEWAY_ID, ''NEW_REN_BUS_IND = ''''New Business'''' and UWRT_EVT_RSN_CD = ''''Cancelled''''''',NULL,NULL,NULL,'UWRT_EVT_RSN_CD','I',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_DEAL_IN') and table_name = 'T_G71_DEAL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that USE_CASE_ID is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_DEAL_PRICING_IN') and table_name = 'T_G71_DEAL_PRICING_IN')))),'ACQUIRE_G71',1,'B','ROW','FUNCTION',1,1,'USE_CASE_ID',NULL,NULL,NULL,'USE_CASE_ID','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_DEAL_PRICING_IN') and table_name = 'T_G71_DEAL_PRICING_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that deal pricing can be linked to a Budget Unit','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_DEAL_PRICING_IN') and table_name = 'T_G71_DEAL_PRICING_IN')))),'ACQUIRE_G71',2,'T','ROW','FUNCTION',25,25,'''T_G71_DEAL_PRICING_IN DP_IN'',GATEWAY_ID,''not exists (select null from DQ_USER.ref_pricing_budget_unit_x pbx where DP_IN.prc_key = pbx.prc_key)''',NULL,NULL,NULL,'PRC_KEY','I',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_DEAL_PRICING_IN') and table_name = 'T_G71_DEAL_PRICING_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Discard Pricing records in T_G71_DEAL_PRICING_IN which link to Reference Deals','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_DEAL_PRICING_IN') and table_name = 'T_G71_DEAL_PRICING_IN')))),'ACQUIRE_G71',2,'B','ROW','FUNCTION',27,27,'''T_G71_DEAL_PRICING_IN'',DEAL_KEY,''V_REFERENCE_DEALS'',''deal_key in (select Deal_key from t_g71_deal_pricing_in where deal_key'','')''',NULL,NULL,NULL,'DEAL_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_DEAL_PRICING_IN') and table_name = 'T_G71_DEAL_PRICING_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_CURRENCY_DP to map ORIG_CRNCY_ISO_CD in T_G71_FINANCIAL_TRANSACTION_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_FINANCIAL_TRANSACTION_IN') and table_name = 'T_G71_FINANCIAL_TRANSACTION_IN')))),'ACQUIRE_G71',5,'B','ROW','FUNCTION',14,14,'ORIG_CRNCY_ISO_CD, ''CRNCY_CD'', ''REF_CURRENCY_DP''',NULL,NULL,NULL,'ORIG_CRNCY_ISO_CD','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_FINANCIAL_TRANSACTION_IN') and table_name = 'T_G71_FINANCIAL_TRANSACTION_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that USE_CASE_ID is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_FINANCIAL_TRANSACTION_IN') and table_name = 'T_G71_FINANCIAL_TRANSACTION_IN')))),'ACQUIRE_G71',1,'B','ROW','FUNCTION',1,1,'USE_CASE_ID',NULL,NULL,NULL,'USE_CASE_ID','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_FINANCIAL_TRANSACTION_IN') and table_name = 'T_G71_FINANCIAL_TRANSACTION_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Don''t process transactions for new contracts that are already cancelled','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_FINANCIAL_TRANSACTION_IN') and table_name = 'T_G71_FINANCIAL_TRANSACTION_IN')))),'ACQUIRE_G71',3,'B','ROW','FUNCTION',25,25,'''T_G71_FINANCIAL_TRANSACTION_IN'', GATEWAY_ID, ''pol_insrd_det_key in (select pol_insrd_det_key from t_g71_polinsrddtl_in where NEW_REN_BUS_IND = ''''New Business'''' and canc_dt is not null)''',NULL,NULL,NULL,'POL_INSRD_DET_KEY','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_FINANCIAL_TRANSACTION_IN') and table_name = 'T_G71_FINANCIAL_TRANSACTION_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that USE_CASE_ID is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_PARTNER_DEAL_X_IN') and table_name = 'T_G71_PARTNER_DEAL_X_IN')))),'ACQUIRE_G71',1,'B','ROW','FUNCTION',1,1,'USE_CASE_ID',NULL,NULL,NULL,'USE_CASE_ID','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_PARTNER_DEAL_X_IN') and table_name = 'T_G71_PARTNER_DEAL_X_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Discard Partner-Deal data that has already been processed','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_PARTNER_DEAL_X_IN') and table_name = 'T_G71_PARTNER_DEAL_X_IN')))),'ACQUIRE_G71',2,'B','ROW','FUNCTION',27,27,'''T_G71_PARTNER_DEAL_X_IN'',PRTNR_SDL||''-''||PRTNR_ROLE_SDL||''-''||DEAL_KEY,''T_G71_PARTNER_DEAL_X_IN'',''(prtnr_sdl, prtnr_role_sdl, deal_key) in (select prtnr_sdl, prtnr_role_sdl, deal_key from DQ_USER.ref_partner_deal_x) and (prtnr_sdl||''-''||prtnr_role_sdl||''-''||deal_key)'',''''',NULL,NULL,NULL,'DEAL_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_PARTNER_DEAL_X_IN') and table_name = 'T_G71_PARTNER_DEAL_X_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that USE_CASE_ID is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_PARTNER_POLICY_X_IN') and table_name = 'T_G71_PARTNER_POLICY_X_IN')))),'ACQUIRE_G71',1,'B','ROW','FUNCTION',1,1,'USE_CASE_ID',NULL,NULL,NULL,'USE_CASE_ID','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_PARTNER_POLICY_X_IN') and table_name = 'T_G71_PARTNER_POLICY_X_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that USE_CASE_ID is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_PARTNER_REINSRNCE_X_IN') and table_name = 'T_G71_PARTNER_REINSRNCE_X_IN')))),'ACQUIRE_G71',1,'B','ROW','FUNCTION',1,1,'USE_CASE_ID',NULL,NULL,NULL,'USE_CASE_ID','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_PARTNER_REINSRNCE_X_IN') and table_name = 'T_G71_PARTNER_REINSRNCE_X_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that USE_CASE_ID is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLICY_DEAL_X_IN') and table_name = 'T_G71_POLICY_DEAL_X_IN')))),'ACQUIRE_G71',1,'B','ROW','FUNCTION',1,1,'USE_CASE_ID',NULL,NULL,NULL,'USE_CASE_ID','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLICY_DEAL_X_IN') and table_name = 'T_G71_POLICY_DEAL_X_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that POL_ID is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLICY_IN') and table_name = 'T_G71_POLICY_IN')))),'ACQUIRE_G71',4,'T','ROW','FUNCTION',1,1,'POL_ID',NULL,NULL,NULL,'POL_ID','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLICY_IN') and table_name = 'T_G71_POLICY_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in T_GENERAL_MAPPINGS to map BUS_PARTIC_TYP_SDL|TYP_AGRMNT_SDL in T_G71_POLICY_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLICY_IN') and table_name = 'T_G71_POLICY_IN')))),'ACQUIRE_G71',3,'B','ROW','FUNCTION',23,23,'p_mapping_type_id=> 13,p_match_key_1=> BUS_PARTIC_TYP_SDL ,p_match_key_2=> TYP_AGRMNT_SDL , p_output_column => ''LOOKUP_VALUE_1'', p_master_data_ID => ''11152996''',NULL,NULL,NULL,'BUS_PARTIC_TYP_SDL|TYP_AGRMNT_SDL','A',NULL,'S3D865',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLICY_IN') and table_name = 'T_G71_POLICY_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_CURRENCY_DP to map POL_CRNCY_ISO_CD in T_G71_POLICY_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLICY_IN') and table_name = 'T_G71_POLICY_IN')))),'ACQUIRE_G71',5,'B','ROW','FUNCTION',14,14,'POL_CRNCY_ISO_CD, ''CRNCY_CD'', ''REF_CURRENCY_DP''',NULL,NULL,NULL,'POL_CRNCY_ISO_CD','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLICY_IN') and table_name = 'T_G71_POLICY_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that USE_CASE_ID is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLICY_IN') and table_name = 'T_G71_POLICY_IN')))),'ACQUIRE_G71',1,'B','ROW','FUNCTION',1,1,'USE_CASE_ID',NULL,NULL,NULL,'USE_CASE_ID','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLICY_IN') and table_name = 'T_G71_POLICY_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Don''t process new contracts that are already cancelled','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLICY_IN') and table_name = 'T_G71_POLICY_IN')))),'ACQUIRE_G71',3,'B','ROW','FUNCTION',25,25,'''T_G71_POLICY_IN'', GATEWAY_ID, ''NEW_REN_BUS_IND = ''''New Business'''' and CANC_DT IS NOT NULL''',NULL,NULL,NULL,'CANC_DT','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLICY_IN') and table_name = 'T_G71_POLICY_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that USE_CASE_ID is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLICY_PRICING_IN') and table_name = 'T_G71_POLICY_PRICING_IN')))),'ACQUIRE_G71',1,'B','ROW','FUNCTION',1,1,'USE_CASE_ID',NULL,NULL,NULL,'USE_CASE_ID','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLICY_PRICING_IN') and table_name = 'T_G71_POLICY_PRICING_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that policy pricing can be linked to a Budget Unit','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLICY_PRICING_IN') and table_name = 'T_G71_POLICY_PRICING_IN')))),'ACQUIRE_G71',2,'T','ROW','FUNCTION',25,25,'''T_G71_POLICY_PRICING_IN PP_IN'',GATEWAY_ID,''not exists (select null from DQ_USER.ref_pricing_budget_unit_x pbx where PP_IN.prc_key = pbx.prc_key)''',NULL,NULL,NULL,'PRC_KEY','I',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLICY_PRICING_IN') and table_name = 'T_G71_POLICY_PRICING_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Discard Pricing records in T_G71_POLICY_PRICING_IN which link to Reference Deals','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLICY_PRICING_IN') and table_name = 'T_G71_POLICY_PRICING_IN')))),'ACQUIRE_G71',2,'B','ROW','FUNCTION',27,27,'''T_G71_POLICY_PRICING_IN'',POL_KEY,''V_REFERENCE_DEALS'',''deal_key in (select Deal_key from REF_POLICY_DEAL_X where pol_key in (select pol_key from T_G71_POLICY_PRICING_IN where pol_key'',''))''',NULL,NULL,NULL,'POL_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLICY_PRICING_IN') and table_name = 'T_G71_POLICY_PRICING_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_COMBINED_ACCORDION to map CTRY_RSK_SDL in T_G71_POLINSRDDTL_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLINSRDDTL_IN') and table_name = 'T_G71_POLINSRDDTL_IN')))),'ACQUIRE_G71',2,'B','ROW','FUNCTION',8,8,'CTRY_RSK_SDL, ''SDL_ID'', ''REF_COMBINED_ACCORDION'',''ACTIVE_INDICATOR = ''''Active'''' AND MASTER_DATA_ID = 97''',NULL,NULL,NULL,'CTRY_RSK_SDL','A',NULL,'S4AN5P',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLINSRDDTL_IN') and table_name = 'T_G71_POLINSRDDTL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_CURRENCY_DP to map ORIG_CRNCY_ISO_CD in T_G71_POLINSRDDTL_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLINSRDDTL_IN') and table_name = 'T_G71_POLINSRDDTL_IN')))),'ACQUIRE_G71',5,'B','ROW','FUNCTION',14,14,'ORIG_CRNCY_ISO_CD, ''CRNCY_CD'', ''REF_CURRENCY_DP''',NULL,NULL,NULL,'ORIG_CRNCY_ISO_CD','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLINSRDDTL_IN') and table_name = 'T_G71_POLINSRDDTL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that USE_CASE_ID is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLINSRDDTL_IN') and table_name = 'T_G71_POLINSRDDTL_IN')))),'ACQUIRE_G71',1,'B','ROW','FUNCTION',1,1,'USE_CASE_ID',NULL,NULL,NULL,'USE_CASE_ID','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLINSRDDTL_IN') and table_name = 'T_G71_POLINSRDDTL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Don''t process new contracts that are already cancelled','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLINSRDDTL_IN') and table_name = 'T_G71_POLINSRDDTL_IN')))),'ACQUIRE_G71',3,'B','ROW','FUNCTION',25,25,'''T_G71_POLINSRDDTL_IN'', GATEWAY_ID, ''NEW_REN_BUS_IND = ''''New Business'''' and CANC_DT IS NOT NULL''',NULL,NULL,NULL,'CANC_DT','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLINSRDDTL_IN') and table_name = 'T_G71_POLINSRDDTL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Discard Pricing records in T_G71_PRICING_SCENARIO_IN which link to Reference Deals','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_PRICING_SCENARIO_IN') and table_name = 'T_G71_PRICING_SCENARIO_IN')))),'ACQUIRE_G71',2,'B','ROW','FUNCTION',27,27,'''T_G71_PRICING_SCENARIO_IN'',PRC_KEY,''V_REFERENCE_DEALS'',''deal_key in (select Deal_key from REF_POLICY_DEAL_X where pol_key in (select pol_key from T_G71_POLICY_PRICING_IN where prc_key in (select prc_key from t_g71_pricing_scenario_in where prc_key'','')))''',NULL,NULL,NULL,'PRC_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_PRICING_SCENARIO_IN') and table_name = 'T_G71_PRICING_SCENARIO_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that USE_CASE_ID is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_PRTNR_POL_INSRD_DET_X_IN') and table_name = 'T_G71_PRTNR_POL_INSRD_DET_X_IN')))),'ACQUIRE_G71',1,'B','ROW','FUNCTION',1,1,'USE_CASE_ID',NULL,NULL,NULL,'USE_CASE_ID','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_PRTNR_POL_INSRD_DET_X_IN') and table_name = 'T_G71_PRTNR_POL_INSRD_DET_X_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that USE_CASE_ID is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_REINSAGRMNT_PRICING_IN') and table_name = 'T_G71_REINSAGRMNT_PRICING_IN')))),'ACQUIRE_G71',1,'B','ROW','FUNCTION',1,1,'USE_CASE_ID',NULL,NULL,NULL,'USE_CASE_ID','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_REINSAGRMNT_PRICING_IN') and table_name = 'T_G71_REINSAGRMNT_PRICING_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in T_GENERAL_MAPPINGS to map BUS_PARTIC_TYP_SDL|TYP_AGRMNT_SDL in T_G71_REINSURANCE_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_REINSURANCE_IN') and table_name = 'T_G71_REINSURANCE_IN')))),'ACQUIRE_G71',3,'B','ROW','FUNCTION',23,23,'p_mapping_type_id=> 13,p_match_key_1=> BUS_PARTIC_TYP_SDL ,p_match_key_2=> TYP_AGRMNT_SDL , p_output_column => ''LOOKUP_VALUE_1'', p_master_data_ID => ''11152996''',NULL,NULL,NULL,'BUS_PARTIC_TYP_SDL|TYP_AGRMNT_SDL','A',NULL,'S3D865',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_REINSURANCE_IN') and table_name = 'T_G71_REINSURANCE_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_CURRENCY_DP to map REINS_AGRMNT_CRNCY_ISO_CD in T_G71_REINSURANCE_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_REINSURANCE_IN') and table_name = 'T_G71_REINSURANCE_IN')))),'ACQUIRE_G71',5,'B','ROW','FUNCTION',14,14,'REINS_AGRMNT_CRNCY_ISO_CD, ''CRNCY_CD'', ''REF_CURRENCY_DP''',NULL,NULL,NULL,'REINS_AGRMNT_CRNCY_ISO_CD','I',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_REINSURANCE_IN') and table_name = 'T_G71_REINSURANCE_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that USE_CASE_ID is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_REINSURANCE_IN') and table_name = 'T_G71_REINSURANCE_IN')))),'ACQUIRE_G71',1,'B','ROW','FUNCTION',1,1,'USE_CASE_ID',NULL,NULL,NULL,'USE_CASE_ID','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_REINSURANCE_IN') and table_name = 'T_G71_REINSURANCE_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Don''t process new contracts that are already cancelled','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_REINSURANCE_IN') and table_name = 'T_G71_REINSURANCE_IN')))),'ACQUIRE_G71',3,'B','ROW','FUNCTION',25,25,'''T_G71_REINSURANCE_IN'', GATEWAY_ID, ''NEW_REN_BUS_IND = ''''New Business'''' and UWRT_EVT_RSN_CD = ''''Cancelled''''''',NULL,NULL,NULL,'UWRT_EVT_RSN_CD','I',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_REINSURANCE_IN') and table_name = 'T_G71_REINSURANCE_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_CURRENCY_DP to map ORIG_CRNCY_ISO_CD in T_G71_UV_BREAKDOWN_FIN_TRX to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_UV_BREAKDOWN_FIN_TRX') and table_name = 'T_G71_UV_BREAKDOWN_FIN_TRX')))),'ACQUIRE_G71',5,'B','ROW','FUNCTION',14,14,'ORIG_CRNCY_ISO_CD, ''CRNCY_CD'', ''REF_CURRENCY_DP''',NULL,NULL,NULL,'ORIG_CRNCY_ISO_CD','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_UV_BREAKDOWN_FIN_TRX') and table_name = 'T_G71_UV_BREAKDOWN_FIN_TRX'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that USE_CASE_ID is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_UV_BREAKDOWN_FIN_TRX') and table_name = 'T_G71_UV_BREAKDOWN_FIN_TRX')))),'ACQUIRE_G71',1,'B','ROW','FUNCTION',1,1,'USE_CASE_ID',NULL,NULL,NULL,'USE_CASE_ID','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_UV_BREAKDOWN_FIN_TRX') and table_name = 'T_G71_UV_BREAKDOWN_FIN_TRX'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Hold claim data if we don''t have the ST_PRVN_ACCD_SDL value in REF_PROVINCE_STATE','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_CLM_IN') and table_name = 'T_G71_V_CLM_IN')))),'ACQUIRE_G71',3,'T','ROW','FUNCTION',25,25,'t_g71_v_clm_in clm'',gateway_id,''not exists ( select null from DQ_USER.ref_province_state ref where clm.st_prvn_accd_sdl = ref.sdl_id)''',NULL,NULL,NULL,'ST_PRVN_ACCD_SDL','I',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_CLM_IN') and table_name = 'T_G71_V_CLM_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Do not allow non delegated deals to enter CorFACTs','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_DEAL_IN') and table_name = 'T_G71_V_DEAL_IN')))),'ACQUIRE_G71',3,'T','ROW','FUNCTION',24,24,'DEAL_TYP_SDL, DEAL_NM, SRC_SYS_CD',NULL,NULL,NULL,'DEAL_TYP_SDL|DEAL_NM|SRC_SYS_CD','A',NULL,'S4AN5P',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_DEAL_IN') and table_name = 'T_G71_V_DEAL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check for duplicate pricing records in T_G71_V_DEAL_PRC_IN','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_DEAL_PRC_IN') and table_name = 'T_G71_V_DEAL_PRC_IN')))),'ACQUIRE_G71',3,'T','ROW','FUNCTION',22,22,'ENR_MULTI_SRC_IND,''2''',NULL,NULL,NULL,'ENR_MULTI_SRC_IND','I',NULL,'S2EW36',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_DEAL_PRC_IN') and table_name = 'T_G71_V_DEAL_PRC_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Hold deal pricing if cannot join to a deal','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_DEAL_PRC_IN') and table_name = 'T_G71_V_DEAL_PRC_IN')))),'ACQUIRE_G71',2,'T','ROW','FUNCTION',25,25,'''t_g71_v_deal_prc_in prc'',gateway_id,''not exists ( select null from t_g71_v_deal_in d where d.dv_deal_key = prc.dv_deal_key and d.event_status not in (5 , 9) )''',NULL,NULL,NULL,'DV_DEAL_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_DEAL_PRC_IN') and table_name = 'T_G71_V_DEAL_PRC_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Hold deal pricing if cannot join to a policy','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_DEAL_PRC_IN') and table_name = 'T_G71_V_DEAL_PRC_IN')))),'ACQUIRE_G71',2,'T','ROW','FUNCTION',25,25,'''t_g71_v_deal_prc_in prc'',gateway_id,''not exists ( select null from t_g71_v_pol_in p join t_g71_v_pol_deal_in pdi on pdi.dv_pol_key = p.dv_pol_key where pdi.dv_deal_key = prc.dv_deal_key and p.event_status not in (5 , 9) )''',NULL,NULL,NULL,'DV_DEAL_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_DEAL_PRC_IN') and table_name = 'T_G71_V_DEAL_PRC_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that deal partner role can be linked to a valid deal','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_DEAL_PRTNRRL_IN') and table_name = 'T_G71_V_DEAL_PRTNRRL_IN')))),'ACQUIRE_G71',2,'T','ROW','FUNCTION',25,25,'''t_g71_v_deal_prtnrrl_in dp'',gateway_id,''not exists ( select null from t_g71_v_deal_in d where d.event_status  not in (5 ,9) and d.dv_deal_key = dp.dv_deal_key )''',NULL,NULL,NULL,'DV_DEAL_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_DEAL_PRTNRRL_IN') and table_name = 'T_G71_V_DEAL_PRTNRRL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that deal partner role can be linked to a partner','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_DEAL_PRTNRRL_IN') and table_name = 'T_G71_V_DEAL_PRTNRRL_IN')))),'ACQUIRE_G71',2,'T','ROW','FUNCTION',25,25,'''t_g71_v_deal_prtnrrl_in dp'',gateway_id,''not exists ( select null from t_g71_v_prtnr_in p where p.dv_prtnr_key = dp.dv_prtnr_key )''',NULL,NULL,NULL,'DV_PRTNR_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_DEAL_PRTNRRL_IN') and table_name = 'T_G71_V_DEAL_PRTNRRL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that policy deal crosswalk can be linked to a valid deal','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POL_DEAL_IN') and table_name = 'T_G71_V_POL_DEAL_IN')))),'ACQUIRE_G71',2,'T','ROW','FUNCTION',25,25,'''t_g71_v_pol_deal_in pd'',gateway_id,''not exists ( select null from t_g71_v_deal_in d where d.dv_deal_key = pd.dv_deal_key and d.event_status not in (5 , 9) )''',NULL,NULL,NULL,'DV_DEAL_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POL_DEAL_IN') and table_name = 'T_G71_V_POL_DEAL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that policy deal crosswalk can be linked to a valid policy','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POL_DEAL_IN') and table_name = 'T_G71_V_POL_DEAL_IN')))),'ACQUIRE_G71',2,'T','ROW','FUNCTION',25,25,'''t_g71_v_pol_deal_in pd'',gateway_id,''not exists ( select null from t_g71_v_pol_in p where p.dv_pol_key = pd.dv_pol_key and p.event_status not in (5 , 9) )''',NULL,NULL,NULL,'DV_POL_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POL_DEAL_IN') and table_name = 'T_G71_V_POL_DEAL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check for duplicate pricing records in T_G71_V_POL_PRC_IN','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POL_PRC_IN') and table_name = 'T_G71_V_POL_PRC_IN')))),'ACQUIRE_G71',6,'T','ROW','FUNCTION',22,22,'ENR_MULTI_SRC_IND,''2''',NULL,NULL,NULL,'ENR_MULTI_SRC_IND','A',NULL,'S2EW36',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POL_PRC_IN') and table_name = 'T_G71_V_POL_PRC_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Discard Pricing records in T_G71_V_POL_PRC_IN which link to Migrated Policies','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POL_PRC_IN') and table_name = 'T_G71_V_POL_PRC_IN')))),'ACQUIRE_G71',6,'B','ROW','WHERE',NULL,27,NULL,' SRC_SYS_CD NOT IN (''MAN'',''S4P'') 
          AND DV_POL_KEY in (select pol.DV_POL_KEY 
                               from T_G71_V_POL_IN pol 
                              where pol.pol_key in (select pol.pol_key 
                                                      from REF_POLICY pol 
                                                     where pol.MIGRT_DATA_FLAG = ''Yes'') 
                            )',NULL,NULL,'DV_POL_KEY','A',NULL,'S4AN5P',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POL_PRC_IN') and table_name = 'T_G71_V_POL_PRC_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Discard Pricing records in T_G71_V_POL_PRC_IN which link to Migrated Deals','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POL_PRC_IN') and table_name = 'T_G71_V_POL_PRC_IN')))),'ACQUIRE_G71',6,'B','ROW','WHERE',NULL,27,NULL,' SRC_SYS_CD NOT IN (''MAN'',''S4P'') 
          AND DV_POL_KEY in (    select pol.dv_pol_key 
                                   from T_G71_V_POL_IN pol 
                             inner join ref_policy_deal_x pol_deal 
                                     on pol_deal.pol_key = pol.pol_key 
                             inner join ref_deal deal 
                                     on deal.deal_key = pol_deal.deal_key 
                                  where deal.migrt_data_flag = ''Yes''
                            )',NULL,NULL,'DV_POL_KEY','A',NULL,'S4AN5P',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POL_PRC_IN') and table_name = 'T_G71_V_POL_PRC_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Discard unwanted Pricing records (By Deal Type) in T_G71_V_POL_PRC_IN which link to Associated Deals','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POL_PRC_IN') and table_name = 'T_G71_V_POL_PRC_IN')))),'ACQUIRE_G71',6,'B','ROW','WHERE',NULL,27,NULL,' SRC_SYS_CD NOT IN (''MAN'',''S4P'') 
          AND DV_POL_KEY in (    select pol.dv_pol_key 
                                   from T_G71_V_POL_IN pol 
                             inner join ref_policy_deal_x pol_deal 
                                     on pol_deal.pol_key = pol.pol_key 
                             inner join ref_deal deal 
                                     on deal.deal_key = pol_deal.deal_key 
                                  where deal.DEAL_TYP_SDL in (2003539,2003542,2003547,2003905) 
                                  union 
                                 select pol.dv_pol_key 
                                   from T_G71_V_POL_IN pol 
                             inner join T_G71_V_POL_DEAL_IN pol_deal 
                                     on pol_deal.dv_pol_key = pol.dv_pol_key 
                             inner join T_G71_V_DEAL_IN deal 
                                     on deal.dv_deal_key = pol_deal.dv_deal_key 
                                  where deal.DEAL_TYP_SDL in (2003539,2003542,2003547,2003905)
                            )',NULL,NULL,'DV_POL_KEY','A',NULL,'S4AN5P',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POL_PRC_IN') and table_name = 'T_G71_V_POL_PRC_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Discard unwanted Pricing records (By Deal Finance Legacy Segment) in T_G71_V_POL_PRC_IN which link to Associated Deals','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POL_PRC_IN') and table_name = 'T_G71_V_POL_PRC_IN')))),'ACQUIRE_G71',6,'B','ROW','JOIN',NULL,27,NULL,'SRC_SYS_CD NOT IN (''MAN'',''S4P'')','JOIN (select pol.DV_POL_KEY 
                               from DQ_USER.t_g71_v_pol_in pol 
                               join DQ_USER.T_G71_V_POLINSRDDTL_IN pid 
                                 on pol.DV_POL_KEY = pid.DV_POL_KEY 
                              where (pid.join_id, pol.incept_yr) in (select DEAL_ID, INCEPT_YR 
                                                                       from DQ_USER.ref_deal 
                                                                      where deal = ''FINANCE LEGACY SEGMENT'')
                            ) lgcy_sgmt
          ON T_G71_V_POL_PRC_IN.DV_POL_KEY = lgcy_sgmt.DV_POL_KEY',NULL,'DV_POL_KEY','A',NULL,'S4AN5P',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POL_PRC_IN') and table_name = 'T_G71_V_POL_PRC_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Hold policy pricing if cannot join to a policy','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POL_PRC_IN') and table_name = 'T_G71_V_POL_PRC_IN')))),'ACQUIRE_G71',2,'T','ROW','WHERE',NULL,25,NULL,'not exists ( select null from t_g71_v_pol_in p where p.dv_pol_key = T_G71_V_POL_PRC_IN.dv_pol_key and p.event_status not in (5 , 9) )',NULL,NULL,'DV_POL_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POL_PRC_IN') and table_name = 'T_G71_V_POL_PRC_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Hold policy pricing if cannot join to a policy insured detail','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POL_PRC_IN') and table_name = 'T_G71_V_POL_PRC_IN')))),'ACQUIRE_G71',2,'T','ROW','WHERE',NULL,25,NULL,'not exists ( select null from t_g71_v_polinsrddtl_in pid where pid.dv_pol_key = T_G71_V_POL_PRC_IN.dv_pol_key and pid.event_status not in (5 , 9) )',NULL,NULL,'DV_POL_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POL_PRC_IN') and table_name = 'T_G71_V_POL_PRC_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that policy partner role can be linked to a policy','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POL_PRTNRRL_IN') and table_name = 'T_G71_V_POL_PRTNRRL_IN')))),'ACQUIRE_G71',2,'T','ROW','FUNCTION',25,25,'''T_G71_V_POL_PRTNRRL_IN pp'',gateway_id,''not exists ( select null from t_g71_v_pol_in d where d.event_status  not in (5,9) and d.dv_pol_key = pp.dv_pol_key )''',' exists ( select null 
                              from t_g71_v_pol_in pol 
                             where pol.dv_pol_key = prc.dv_pol_key 
                               and pol.src_sys_cd = ''MAN'' 
                               and prc.dv_rcd_src = ''ODSP'' 
                     )',NULL,NULL,'DV_POL_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POL_PRTNRRL_IN') and table_name = 'T_G71_V_POL_PRTNRRL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that policy partner role can be linked to a partner','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POL_PRTNRRL_IN') and table_name = 'T_G71_V_POL_PRTNRRL_IN')))),'ACQUIRE_G71',2,'T','ROW','FUNCTION',25,25,'''T_G71_V_POL_PRTNRRL_IN pp'',gateway_id,''not exists ( select null from t_g71_v_prtnr_in p where p.dv_prtnr_key = pp.dv_prtnr_key )''',NULL,NULL,NULL,'DV_PRTNR_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POL_PRTNRRL_IN') and table_name = 'T_G71_V_POL_PRTNRRL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Hold claim data if we don''t have the ST_PRVN_SDL value in REF_PROVINCE_STATE','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POLINSRDDTL_IN') and table_name = 'T_G71_V_POLINSRDDTL_IN')))),'ACQUIRE_G71',3,'T','ROW','FUNCTION',25,25,'''t_g71_v_polinsrddtl_in pid'',gateway_id,''not exists ( select null from DQ_USER.ref_province_state ref where pid.st_prvn_sdl = ref.sdl_id)''',NULL,NULL,NULL,'ST_PRVN_SDL','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POLINSRDDTL_IN') and table_name = 'T_G71_V_POLINSRDDTL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that policy insured detail can be linked to a policy','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POLINSRDDTL_IN') and table_name = 'T_G71_V_POLINSRDDTL_IN')))),'ACQUIRE_G71',2,'T','ROW','FUNCTION',25,25,'''t_g71_v_polinsrddtl_in pid'',gateway_id,''not exists ( select null from t_g71_v_pol_in p where p.dv_pol_key = pid.dv_pol_key and  p.dv_rcd_src = pid.dv_rcd_src )''',NULL,NULL,NULL,'DV_POL_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POLINSRDDTL_IN') and table_name = 'T_G71_V_POLINSRDDTL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that a Policy Insured Detail links to a record in V_COV','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POLINSRDDTL_IN') and table_name = 'T_G71_V_POLINSRDDTL_IN')))),'ACQUIRE_G71',2,'T','ROW','FUNCTION',25,25,'''t_g71_v_polinsrddtl_in pid'',gateway_id,''not exists ( select null from t_g71_v_cov_in c where c.dv_cov_key = pid.dv_cov_key)''',NULL,NULL,NULL,'DV_COV_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POLINSRDDTL_IN') and table_name = 'T_G71_V_POLINSRDDTL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that transaction can be linked to a contract structure','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POLINSRDDTL_CLM_TRX_IN') and table_name = 'T_G71_V_POLINSRDDTL_CLM_TRX_IN')))),'ACQUIRE_G71',2,'T','ROW','FUNCTION',25,25,'''T_G71_V_POLINSRDDTL_CLM_TRX_IN TRX'',GATEWAY_ID,''not exists ( select null from t_g71_v_pol_in p inner join t_g71_v_polinsrddtl_in pd on p.dv_pol_key =  pd.dv_pol_key where p.event_status  <> 5 and pd.event_status <> 5 and pd.dv_polinsrddtl_key = trx.dv_polinsrddtl_key )''',NULL,NULL,NULL,'DV_POLINSRDDTL_CLM_TRX_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POLINSRDDTL_CLM_TRX_IN') and table_name = 'T_G71_V_POLINSRDDTL_CLM_TRX_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that transaction can be linked to a contract structure','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POLINSRDDTL_TRX_IN') and table_name = 'T_G71_V_POLINSRDDTL_TRX_IN')))),'ACQUIRE_G71',2,'T','ROW','FUNCTION',25,25,'''T_G71_V_POLINSRDDTL_TRX_IN TRX'',GATEWAY_ID,''not exists ( select null from t_g71_v_pol_in p inner join t_g71_v_polinsrddtl_in pd on p.dv_pol_key =  pd.dv_pol_key where p.event_status  <> 5 and pd.event_status <> 5 and pd.dv_polinsrddtl_key = trx.dv_polinsrddtl_key )''',NULL,NULL,NULL,'DV_POLINSRDDTL_TRX_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POLINSRDDTL_TRX_IN') and table_name = 'T_G71_V_POLINSRDDTL_TRX_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that a Reinsurance Agreement links to either a PID or RA Breakdown (Unless IGR managed)','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_REINSAGRMNT_IN') and table_name = 'T_G71_V_REINSAGRMNT_IN')))),'ACQUIRE_G71',2,'T','ROW','WHERE',NULL,25,NULL,'GRP_RTR_MNGMNT_TYP = ''N/A''          
          AND dv_reinsagrmnt_key not in ( SELECT r.dv_reinsagrmnt_key
                                         FROM T_G71_V_REINSAGRMNT_IN                                      r
                                   inner join T_G71_V_REINSAGRMNTDTL_IN                                   rdtl
                                           on rdtl.dv_reinsagrmnt_key        = r.dv_reinsagrmnt_key
                                   inner join T_G71_V_REINSAGRMNT_BRKDWN_IN                               rb
                                           on r.dv_reinsagrmnt_key           = rb.dv_reinsagrmnt_key
                                           
                                        UNION
                                       
                                       SELECT r.dv_reinsagrmnt_key
                                         FROM T_G71_V_REINSAGRMNT_IN                                      r
                                   inner join T_G71_V_REINSAGRMNTDTL_IN                                   rdtl
                                           on rdtl.dv_reinsagrmnt_key        = r.dv_reinsagrmnt_key
                                         join t_g71_v_polinsrddtl_reindtl_in                              pr
                                           on pr.dv_reinsagrmntdtl_key       = rdtl.dv_reinsagrmntdtl_key
                                         join T_G71_V_polinsrddtl_in                                      pd
                                           on pd.dv_polinsrddtl_key          = pr.dv_polinsrddtl_key
                                         join T_G71_V_cov_in                                              cv
                                           on cv.DV_COV_KEY                  = pd.DV_COV_KEY
                                  )',NULL,NULL,'DV_REINSAGRMNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_REINSAGRMNT_IN') and table_name = 'T_G71_V_REINSAGRMNT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that the PID - RA Detail record links to a RA Detail','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POLINSRDDTL_REINDTL_IN') and table_name = 'T_G71_V_POLINSRDDTL_REINDTL_IN')))),'ACQUIRE_G71',2,'T','ROW','FUNCTION',25,25,'''t_g71_v_polinsrddtl_reindtl_in pr'',gateway_id,''not exists ( select null from t_g71_v_reinsagrmntdtl_in rad where rad.dv_reinsagrmntdtl_key = pr.dv_reinsagrmntdtl_key )''',NULL,NULL,NULL,'DV_REINSAGRMNTDTL_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POLINSRDDTL_REINDTL_IN') and table_name = 'T_G71_V_POLINSRDDTL_REINDTL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that the PID - RA Detail record links to a PID','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POLINSRDDTL_REINDTL_IN') and table_name = 'T_G71_V_POLINSRDDTL_REINDTL_IN')))),'ACQUIRE_G71',2,'T','ROW','FUNCTION',25,25,'''t_g71_v_polinsrddtl_reindtl_in pr'',gateway_id,''not exists ( select null from t_g71_v_polinsrddtl_in p where p.dv_polinsrddtl_key = pr.dv_polinsrddtl_key )''',NULL,NULL,NULL,'DV_POLINSRDDTL_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POLINSRDDTL_REINDTL_IN') and table_name = 'T_G71_V_POLINSRDDTL_REINDTL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that loss scenario links to pricing','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_PRCLOSSSCEN_IN') and table_name = 'T_G71_V_PRCLOSSSCEN_IN')))),'ACQUIRE_G71',3,'T','ROW','FUNCTION',25,25,'''t_g71_v_prclossscen_in scn'',gateway_id,''not exists ( select null from t_g71_v_pol_prc_in prc where scn.dv_prc_key = prc.dv_prc_key and scn.dv_rcd_src = prc.dv_rcd_src and scn.session_id = prc.session_id and prc.ULTI_LOSS_BUS_EVT_TRAN_TYP_SDL is null )''',NULL,NULL,NULL,'DV_PRCLOSSSCEN_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_PRCLOSSSCEN_IN') and table_name = 'T_G71_V_PRCLOSSSCEN_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that loss scenario links to policy','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_PRCLOSSSCEN_IN') and table_name = 'T_G71_V_PRCLOSSSCEN_IN')))),'ACQUIRE_G71',2,'T','ROW','FUNCTION',25,25,'''t_g71_v_prclossscen_in scn'',gateway_id,''not exists ( select null from t_g71_v_pol_in p where scn.dv_pol_key = p.dv_pol_key )''',NULL,NULL,NULL,'DV_PRCLOSSSCEN_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_PRCLOSSSCEN_IN') and table_name = 'T_G71_V_PRCLOSSSCEN_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that reinsurance partner role can be linked to a reinsurance agreement','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_RA_PRTNRRL_IN') and table_name = 'T_G71_V_RA_PRTNRRL_IN')))),'ACQUIRE_G71',2,'T','ROW','FUNCTION',25,25,'''T_G71_V_RA_PRTNRRL_IN rp'',gateway_id,''not exists ( select null from t_g71_v_reinsagrmnt_in r where r.dv_reinsagrmnt_key = rp.dv_reinsagrmnt_key )''',NULL,NULL,NULL,'DV_REINSAGRMNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_RA_PRTNRRL_IN') and table_name = 'T_G71_V_RA_PRTNRRL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that policy partner role can be linked to a partner','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_RA_PRTNRRL_IN') and table_name = 'T_G71_V_RA_PRTNRRL_IN')))),'ACQUIRE_G71',2,'T','ROW','FUNCTION',25,25,'''T_G71_V_RA_PRTNRRL_IN rp'',gateway_id,''not exists ( select null from t_g71_v_prtnr_in p where p.dv_prtnr_key = rp.dv_prtnr_key )''',NULL,NULL,NULL,'DV_PRTNR_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_RA_PRTNRRL_IN') and table_name = 'T_G71_V_RA_PRTNRRL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Hold reinsurance pricing if cannot join to a reinsurance agreement','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_REINSAGRMNT_PRC_IN') and table_name = 'T_G71_V_REINSAGRMNT_PRC_IN')))),'ACQUIRE_G71',2,'T','ROW','FUNCTION',25,25,'''t_g71_v_reinsagrmnt_prc_in prc'',gateway_id,''not exists ( select null from t_g71_v_reinsagrmnt_in r where r.dv_reinsagrmnt_key = prc.dv_reinsagrmnt_key and R.event_status not in (5 , 9) )''',NULL,NULL,NULL,'DV_REINSAGRMNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_REINSAGRMNT_PRC_IN') and table_name = 'T_G71_V_REINSAGRMNT_PRC_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that transaction can be linked to a contract structure','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_REINSAGRMNT_CLM_TRX_IN') and table_name = 'T_G71_V_REINSAGRMNT_CLM_TRX_IN')))),'ACQUIRE_G71',2,'T','ROW','FUNCTION',25,25,'''T_G71_V_REINSAGRMNT_CLM_TRX_IN TRX'',GATEWAY_ID,''not exists ( select null from t_g71_v_reinsagrmnt_in  r inner join t_g71_v_reinsagrmntdtl_in rd on r.dv_reinsagrmnt_key = rd.dv_reinsagrmnt_key where r.event_status  <> 5 and rd.event_status <> 5 and rd.dv_reinsagrmntdtl_key = trx.dv_reinsagrmntdtl_key )''',NULL,NULL,NULL,'DV_REINSAGRMNT_CLM_TRX_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_REINSAGRMNT_CLM_TRX_IN') and table_name = 'T_G71_V_REINSAGRMNT_CLM_TRX_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that transaction can be linked to a contract structure','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_REINSAGRMNT_TRX_IN') and table_name = 'T_G71_V_REINSAGRMNT_TRX_IN')))),'ACQUIRE_G71',2,'T','ROW','FUNCTION',25,25,'''T_G71_V_REINSAGRMNT_TRX_IN TRX'',GATEWAY_ID,''not exists ( select null from t_g71_v_reinsagrmnt_in  r inner join t_g71_v_reinsagrmntdtl_in rd on r.dv_reinsagrmnt_key = rd.dv_reinsagrmnt_key where r.event_status  <> 5 and rd.event_status <> 5 and rd.dv_reinsagrmntdtl_key = trx.dv_reinsagrmntdtl_key )''',NULL,NULL,NULL,'DV_REINSAGRMNT_TRX_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_REINSAGRMNT_TRX_IN') and table_name = 'T_G71_V_REINSAGRMNT_TRX_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that transaction can be linked to a reinsurance contract','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_REINSAGRMNT_CLM_TRX_IN') and table_name = 'T_G71_V_REINSAGRMNT_CLM_TRX_IN')))),'ACQUIRE_G71',2,'T','ROW','FUNCTION',25,25,'''T_G71_V_REINSAGRMNT_CLM_TRX_IN TRX'',GATEWAY_ID,''not exists ( select null from DQ_USER.t_g71_v_reinsagrmnt_in r where trx.DV_REINSAGRMNT_KEY = r.DV_REINSAGRMNT_KEY and r.event_status <> 5 )''',NULL,NULL,NULL,'DV_REINSAGRMNT_CLM_TRX_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_REINSAGRMNT_CLM_TRX_IN') and table_name = 'T_G71_V_REINSAGRMNT_CLM_TRX_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that transaction can be linked to a reinsurance contract','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_REINSAGRMNT_TRX_IN') and table_name = 'T_G71_V_REINSAGRMNT_TRX_IN')))),'ACQUIRE_G71',2,'T','ROW','FUNCTION',25,25,'''T_G71_V_REINSAGRMNT_TRX_IN TRX'',GATEWAY_ID,''not exists ( select null from DQ_USER.t_g71_v_reinsagrmnt_in r where trx.DV_REINSAGRMNT_KEY = r.DV_REINSAGRMNT_KEY and r.event_status <> 5 )''',NULL,NULL,NULL,'DV_REINSAGRMNT_TRX_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_REINSAGRMNT_TRX_IN') and table_name = 'T_G71_V_REINSAGRMNT_TRX_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that PRTNR_SDL is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_PRTNR_IN') and table_name = 'T_G71_V_PRTNR_IN')))),'ACQUIRE_G71',3,'T','ROW','FUNCTION',1,1,'PRTNR_SDL',NULL,NULL,3,'PRTNR_SDL','A',NULL,'S2EW36',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_PRTNR_IN') and table_name = 'T_G71_V_PRTNR_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in V_GM048_GRP_ACCT to map GRP_ACCT_SDL in T_G72_GL_ACCOUNT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G72_GL_ACCOUNT_IN') and table_name = 'T_G72_GL_ACCOUNT_IN')))),'ALL',2,'B','ROW','FUNCTION',11,11,'''48'', CODE',NULL,NULL,6,'GRP_ACCT_SDL','A',NULL,'S4TCBF',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G72_GL_ACCOUNT_IN') and table_name = 'T_G72_GL_ACCOUNT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Hold back records in T_G72_GL_ACCOUNT_IN where  GRP_ACCT_SDL is null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G72_GL_ACCOUNT_IN') and table_name = 'T_G72_GL_ACCOUNT_IN')))),'ALL',2,'B','ROW','FUNCTION',25,25,'''T_G72_GL_ACCOUNT_IN'', GATEWAY_ID, ''GRP_ACCT_SDL is null and ENABLED_FLAG = ''''Y''''''',NULL,NULL,6,'GRP_ACCT_SDL','A',NULL,'S4TCBF',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G72_GL_ACCOUNT_IN') and table_name = 'T_G72_GL_ACCOUNT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in V_GM036_GRP_A_ACCNT to map ACCOUNT in T_G72_REVEAL_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G72_REVEAL_IN') and table_name = 'T_G72_REVEAL_IN')))),'ALL',3,'B','ROW','FUNCTION',11,11,'''36'', ACCOUNT',NULL,NULL,NULL,'ACCOUNT','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G72_REVEAL_IN') and table_name = 'T_G72_REVEAL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_CURRENCY to map BP in T_G72_REVEAL_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G72_REVEAL_IN') and table_name = 'T_G72_REVEAL_IN')))),'ALL',3,'B','ROW','FUNCTION',18,18,'''73'', BP, ''74'', ''36'', ACCOUNT',NULL,NULL,NULL,'BP','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G72_REVEAL_IN') and table_name = 'T_G72_REVEAL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_CURRENCY_DP to map ORIG_CRNCY_ISO_CD in T_G73_FINC_TRAN_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G73_FINC_TRAN_IN') and table_name = 'T_G73_FINC_TRAN_IN')))),'ALL',5,'B','ROW','FUNCTION',14,14,'ORIG_CRNCY_ISO_CD, ''CRNCY_CD'', ''REF_CURRENCY_DP''',NULL,NULL,NULL,'ORIG_CRNCY_ISO_CD','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G73_FINC_TRAN_IN') and table_name = 'T_G73_FINC_TRAN_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Exclude Deal Calculation Condition if the configuration record was rejected','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G73_IGR_CALC_DEAL_CON_OUT') and table_name = 'T_G73_IGR_CALC_DEAL_CON_OUT')))),'ALL',3,'B','ROW','FUNCTION',25,25,'''T_G73_IGR_CALC_DEAL_CON_OUT CN'', GATEWAY_ID, ''not exists (select null from t_igr_calc_deal_cnfgrtn cf where cf.calc_deal_cnfgrtn_key = cn.calc_deal_cnfgrtn_key and cf.session_id = cn.session_id and cf.event_status <> 5 )''',NULL,NULL,NULL,'CALC_DEAL_CNFGRTN_KEY','A',NULL,'S2EW36',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G73_IGR_CALC_DEAL_CON_OUT') and table_name = 'T_G73_IGR_CALC_DEAL_CON_OUT'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_BUDGET_UNIT to map BDGT_UNT_KEY in T_G74_PLAN_PROJ_BDGT_UNT_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN') and table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN')))),'ALL',4,'T','ROW','FUNCTION',21,21,'BDGT_UNT_KEY, ''BDGT_UNT_KEY'', ''REF_BUDGET_UNIT''',NULL,NULL,NULL,'BDGT_UNT_KEY','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN') and table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have the Deals Line of Business in Gateway','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN') and table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN')))),'ALL',4,'T','ROW','FUNCTION',33,33,'BDGT_UNT_KEY, ''BDGT_UNT_KEY'', ''REF_BUDGET_UNIT'', ''DEAL'', '' EXISTS (SELECT LINE_BUS_SDL 
                                                           FROM REF_BUDGET_UNIT bu
                                                             JOIN T_G74_PLAN_PROJ_BDGT_UNT_IN ppb
                                                               ON bu.BDGT_UNT_KEY =  ppb.BDGT_UNT_KEY
                                                              AND bu.LINE_BUS_SDL in (select line_bus_sdl 
                                                                                     from REF_LINE_OF_BUSINESS
                                                                                    where active_indicator = ''''Active'''')
                                                          )''',NULL,NULL,NULL,'BDGT_UNT_KEY','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN') and table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we can derive the Deals TOBH from TYP_AGRMNT_SDL','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN') and table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN')))),'ALL',4,'T','ROW','FUNCTION',33,33,'BDGT_UNT_KEY, ''BDGT_UNT_KEY'', ''REF_BUDGET_UNIT'', ''DEAL'', '' EXISTS (SELECT TYP_AGRMNT_SDL 
                                                             FROM REF_BUDGET_UNIT bu
                                                             JOIN T_G74_PLAN_PROJ_BDGT_UNT_IN ppb
                                                               ON bu.BDGT_UNT_KEY =  ppb.BDGT_UNT_KEY
                                                              AND bu.TYP_AGRMNT_SDL in (select TYP_AGRMNT from V_GM042_CORDL_TO_TOBH)
                                                          )''',NULL,NULL,NULL,'BDGT_UNT_KEY','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN') and table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we can derive the Deals TOBH from BUS_PARTIC_TYP_SDL','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN') and table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN')))),'ALL',4,'T','ROW','FUNCTION',33,33,'BDGT_UNT_KEY, ''BDGT_UNT_KEY'', ''REF_BUDGET_UNIT'', ''DEAL'', '' EXISTS (SELECT BUS_PARTIC_TYP_SDL 
                                                            FROM REF_BUDGET_UNIT bu
                                                             JOIN T_G74_PLAN_PROJ_BDGT_UNT_IN ppb
                                                               ON bu.BDGT_UNT_KEY =  ppb.BDGT_UNT_KEY
                                                              AND bu.BUS_PARTIC_TYP_SDL in (select BUS_PARTIC_TYP from V_GM042_CORDL_TO_TOBH)
                                                          )''',NULL,NULL,NULL,'BDGT_UNT_KEY','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN') and table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have the Deals Source System in Gateway','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN') and table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN')))),'ALL',4,'T','ROW','FUNCTION',33,33,'BDGT_UNT_KEY, ''BDGT_UNT_KEY'', ''REF_BUDGET_UNIT'', ''DEAL'', '' EXISTS (SELECT SRC_SYS_CD 
                                                             FROM REF_BUDGET_UNIT bu
                                                             JOIN T_G74_PLAN_PROJ_BDGT_UNT_IN ppb
                                                               ON bu.BDGT_UNT_KEY =  ppb.BDGT_UNT_KEY
                                                              AND bu.SRC_SYS_CD in (select SRC_SYS_CD from V_GM090_CORDL_TO_ORIGSYS)
                                                          )''',NULL,NULL,NULL,'BDGT_UNT_KEY','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN') and table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have the Deals Claim Basis SDL in Gateway','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN') and table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN')))),'ALL',4,'T','ROW','FUNCTION',33,33,'BDGT_UNT_KEY, ''BDGT_UNT_KEY'', ''REF_BUDGET_UNIT'', ''DEAL'', '' EXISTS (SELECT clm_basis_sdl 
                                                            FROM REF_BUDGET_UNIT bu
                                                             JOIN T_G74_PLAN_PROJ_BDGT_UNT_IN ppb
                                                               ON bu.BDGT_UNT_KEY =  ppb.BDGT_UNT_KEY
                                                              AND bu.clm_basis_sdl in (select SDL_ID 
                                                                                      from ref_combined_accordion
                                                                                     where master_data_id = 1003627 )
                                                          )''',NULL,NULL,NULL,'BDGT_UNT_KEY','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN') and table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have the Deals Prod Hub SDL in Gateway','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN') and table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN')))),'ALL',4,'T','ROW','FUNCTION',33,33,'BDGT_UNT_KEY, ''BDGT_UNT_KEY'', ''REF_BUDGET_UNIT'', ''DEAL'', '' EXISTS (SELECT prod_hub_sdl 
                                                             FROM REF_BUDGET_UNIT bu
                                                             JOIN T_G74_PLAN_PROJ_BDGT_UNT_IN ppb
                                                               ON bu.BDGT_UNT_KEY =  ppb.BDGT_UNT_KEY
                                                              AND bu.prod_hub_sdl in (select SDL_ID 
                                                                                      from ref_combined_accordion
                                                                                     where master_data_id = 1023069 )
                                                          )''',NULL,NULL,NULL,'BDGT_UNT_KEY','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN') and table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have the Deals Legal Entity SDL in Gateway','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN') and table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN')))),'ALL',4,'T','ROW','FUNCTION',33,33,'BDGT_UNT_KEY, ''BDGT_UNT_KEY'', ''REF_BUDGET_UNIT'', ''DEAL'', '' EXISTS (SELECT lgl_enty_sdl 
                                                             FROM REF_BUDGET_UNIT bu
                                                             JOIN T_G74_PLAN_PROJ_BDGT_UNT_IN ppb
                                                               ON bu.BDGT_UNT_KEY =  ppb.BDGT_UNT_KEY
                                                              AND bu.lgl_enty_sdl in (select lgl_enty_sdl 
                                                                                     from REF_LEGAL_ENTITY 
                                                                                    where active_indicator = ''''Active'''')
                                                          )''',NULL,NULL,NULL,'BDGT_UNT_KEY','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN') and table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have the Deals Bus Sgmt SDL in Gateway','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN') and table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN')))),'ALL',4,'T','ROW','FUNCTION',33,33,'BDGT_UNT_KEY, ''BDGT_UNT_KEY'', ''REF_BUDGET_UNIT'', ''DEAL'', '' EXISTS (SELECT lgl_enty_sdl 
                                                             FROM REF_BUDGET_UNIT bu
                                                             JOIN T_G74_PLAN_PROJ_BDGT_UNT_IN ppb
                                                               ON bu.BDGT_UNT_KEY =  ppb.BDGT_UNT_KEY
                                                              AND bu.lgl_enty_sdl in (select lgl_enty_sdl 
                                                                                     from REF_LEGAL_ENTITY 
                                                                                    where active_indicator = ''''Active'''' 
                                                                                      and bus_sgmt_sdl in (select sdl_id
                                                                                                             from ref_combined_accordion
                                                                                                            where master_data_id = 1022640 )
                                                                                  )
                                                          )''',NULL,NULL,NULL,'BDGT_UNT_KEY','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN') and table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have the Deals Deal Typ SDL in Gateway','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN') and table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN')))),'ALL',4,'T','ROW','FUNCTION',33,33,'BDGT_UNT_KEY, ''BDGT_UNT_KEY'', ''REF_BUDGET_UNIT'', ''DEAL'', '' EXISTS (SELECT deal_typ_sdl 
                                                             FROM REF_BUDGET_UNIT bu
                                                             JOIN T_G74_PLAN_PROJ_BDGT_UNT_IN ppb
                                                               ON bu.BDGT_UNT_KEY =  ppb.BDGT_UNT_KEY
                                                              AND bu.deal_typ_sdl in (select SDL_ID 
                                                                                      from ref_combined_accordion
                                                                                     where master_data_id = 2001262
                                                                                       and active_indicator = ''''Active'''' )
                                                          )''',NULL,NULL,NULL,'BDGT_UNT_KEY','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN') and table_name = 'T_G74_PLAN_PROJ_BDGT_UNT_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_CURRENCY_DP to map ORIG_CRNCY_ISO_CD in T_G76_FINANCIAL_TRAN_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G76_FINANCIAL_TRAN_IN') and table_name = 'T_G76_FINANCIAL_TRAN_IN')))),'ALL',5,'B','ROW','FUNCTION',14,14,'ORIG_CRNCY_ISO_CD, ''CRNCY_CD'', ''REF_CURRENCY_DP''',NULL,NULL,NULL,'ORIG_CRNCY_ISO_CD','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G76_FINANCIAL_TRAN_IN') and table_name = 'T_G76_FINANCIAL_TRAN_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_CURRENCY_DP to map ORIG_CRNCY_ISO_CD in T_G76_PROC_BAL_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G76_PROC_BAL_IN') and table_name = 'T_G76_PROC_BAL_IN')))),'ALL',5,'B','ROW','FUNCTION',14,14,'ORIG_CRNCY_ISO_CD, ''CRNCY_CD'', ''REF_CURRENCY_DP''',NULL,NULL,NULL,'ORIG_CRNCY_ISO_CD','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G76_PROC_BAL_IN') and table_name = 'T_G76_PROC_BAL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_CURRENCY_DP to map ORIG_CRNCY_CD in T_G79_JOURNAL_ENTRY_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G79_JOURNAL_ENTRY_IN') and table_name = 'T_G79_JOURNAL_ENTRY_IN')))),'ALL',5,'B','ROW','FUNCTION',14,14,'ORIG_CRNCY_CD, ''CRNCY_CD'', ''REF_CURRENCY_DP''',NULL,NULL,NULL,'ORIG_CRNCY_CD','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G79_JOURNAL_ENTRY_IN') and table_name = 'T_G79_JOURNAL_ENTRY_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in V_GM009_SBCCNT to map SRC_SYS_CD in T_G7M_FINANCIAL_TRAN_CORFAH_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G7M_FINANCIAL_TRAN_CORFAH_IN') and table_name = 'T_G7M_FINANCIAL_TRAN_CORFAH_IN')))),'ALL',4,'T','ROW','FUNCTION',14,14,'SRC_SYS_CD, ''SRC_SYS'', ''V_GM009_SBCCNT''',NULL,NULL,NULL,'SRC_SYS_CD','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G7M_FINANCIAL_TRAN_CORFAH_IN') and table_name = 'T_G7M_FINANCIAL_TRAN_CORFAH_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_COMBINED_ACCORDION to map BUS_EVT_TRAN_TYP_SDL in T_G7M_FINANCIAL_TRAN_CORFAH_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G7M_FINANCIAL_TRAN_CORFAH_IN') and table_name = 'T_G7M_FINANCIAL_TRAN_CORFAH_IN')))),'ALL',4,'T','ROW','FUNCTION',14,14,'BUS_EVT_TRAN_TYP_SDL, ''SDL_ID'', ''REF_COMBINED_ACCORDION'', ''MASTER_DATA_ID   = 11178312''',NULL,NULL,NULL,'BUS_EVT_TRAN_TYP_SDL','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G7M_FINANCIAL_TRAN_CORFAH_IN') and table_name = 'T_G7M_FINANCIAL_TRAN_CORFAH_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that BDGT_UNT_KEY is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G7M_FINANCIAL_TRAN_CORFAH_IN') and table_name = 'T_G7M_FINANCIAL_TRAN_CORFAH_IN')))),'ALL',4,'T','ROW','FUNCTION',1,1,'BDGT_UNT_KEY',NULL,NULL,NULL,'BDGT_UNT_KEY','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G7M_FINANCIAL_TRAN_CORFAH_IN') and table_name = 'T_G7M_FINANCIAL_TRAN_CORFAH_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Exclude Deal Calculation Configuration if there are no BETT Conditions','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_IGR_CALC_DEAL_CNFGRTN') and table_name = 'T_IGR_CALC_DEAL_CNFGRTN')))),'ALL',3,'B','ROW','FUNCTION',25,25,'''T_IGR_CALC_DEAL_CNFGRTN CF'', GATEWAY_ID, ''not exists (select null from t_igr_calc_deal_condn cn where cf.calc_deal_cnfgrtn_key = cn.calc_deal_cnfgrtn_key and cn.col_nm = ''''BUS_EVT_TRAN_TYP_SDL'''' and cn.val_frm <> ''''<NA>'''' ) and not exists (select null from DQ_USER.t_g32_calc_cnfgrtn_cond_in c where c.item_id = cf.item_id and c.part = cf.part_id and c.session_id = cf.session_id and c.deal_id = cf.igr_deal_id and c.col_nm = ''''SOURCE_TOA'''' and c.val_frm= ''''ALL'''' )''',NULL,NULL,NULL,'CALC_DEAL_CNFGRTN_KEY','A',NULL,'S2EW36',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_IGR_CALC_DEAL_CNFGRTN') and table_name = 'T_IGR_CALC_DEAL_CNFGRTN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Exclude Deal Calculation Condition if LFD to CorDL translation is not successful','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_IGR_CALC_DEAL_CONDN') and table_name = 'T_IGR_CALC_DEAL_CONDN')))),'ALL',3,'B','ROW','FUNCTION',25,25,'''T_IGR_CALC_DEAL_CONDN'', GATEWAY_ID, ''VAL_FRM = ''''<NA>'''' and VAL_TO = ''''<NA>''''''',NULL,NULL,NULL,'VAL_FRM','A',NULL,'S2EW36',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_IGR_CALC_DEAL_CONDN') and table_name = 'T_IGR_CALC_DEAL_CONDN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Exclude IGR T&C Coverage rule if LFD to CorDL translation is not successful','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_IGR_TC_COVERAGE') and table_name = 'T_IGR_TC_COVERAGE')))),'ALL',3,'B','ROW','FUNCTION',25,25,'''T_IGR_TC_COVERAGE'', GATEWAY_ID, ''VAL_FRM = ''''<NA>'''' and VAL_TO = ''''<NA>''''''',NULL,NULL,NULL,'VAL_FRM','A',NULL,'S2EW36',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_IGR_TC_COVERAGE') and table_name = 'T_IGR_TC_COVERAGE'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Exclude IGR T&C Exclusion rule if LFD to CorDL translation is not successful','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_IGR_TC_EXCLUSIONS') and table_name = 'T_IGR_TC_EXCLUSIONS')))),'ALL',3,'B','ROW','FUNCTION',25,25,'''T_IGR_TC_EXCLUSIONS'', GATEWAY_ID, ''VAL_FRM = ''''<NA>'''' and VAL_TO = ''''<NA>''''''',NULL,NULL,NULL,'VAL_FRM','A',NULL,'S2EW36',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_IGR_TC_EXCLUSIONS') and table_name = 'T_IGR_TC_EXCLUSIONS'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Exclude IGR T&C Exclusion rule if LFD to CorDL translation is not successful','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_IGR_TC_INCLUSIONS') and table_name = 'T_IGR_TC_INCLUSIONS')))),'ALL',3,'B','ROW','FUNCTION',25,25,'''T_IGR_TC_INCLUSIONS'', GATEWAY_ID, ''VAL_FRM = ''''<NA>'''' and VAL_TO = ''''<NA>''''''',NULL,NULL,NULL,'VAL_FRM','A',NULL,'S2EW36',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_IGR_TC_INCLUSIONS') and table_name = 'T_IGR_TC_INCLUSIONS'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we received more than 90% of the expected number of Exchange Rates','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_MDM_EXCHANGE_RATE_IN') and table_name = 'T_MDM_EXCHANGE_RATE_IN')))),'ALL',4,'T','TOTALS','FUNCTION',19,19,'SESSION_ID,''T'',0.90',NULL,NULL,NULL,'BASE_CURRENCY_CODE|TERM_CURRENCY_CODE','A',NULL,'S89W7G',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_MDM_EXCHANGE_RATE_IN') and table_name = 'T_MDM_EXCHANGE_RATE_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that DIV_GRP_FINC_SDL is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_MDM_PROFIT_CENTRE_IN') and table_name = 'T_MDM_PROFIT_CENTRE_IN')))),'ALL',1,'B','ROW','FUNCTION',1,1,'DIV_GRP_FINC_SDL',NULL,NULL,4,'DIV_GRP_FINC_SDL','A',NULL,'S3PP5N',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_MDM_PROFIT_CENTRE_IN') and table_name = 'T_MDM_PROFIT_CENTRE_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that MGMNT_UNT_GRP_FINC_SDL is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_MDM_PROFIT_CENTRE_IN') and table_name = 'T_MDM_PROFIT_CENTRE_IN')))),'ALL',1,'B','ROW','FUNCTION',1,1,'MGMNT_UNT_GRP_FINC_SDL',NULL,NULL,5,'MGMNT_UNT_GRP_FINC_SDL','A',NULL,'S3PP5N',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_MDM_PROFIT_CENTRE_IN') and table_name = 'T_MDM_PROFIT_CENTRE_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that ISO02_ALPHA is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_MDM_PROVINCE_STATE_IN') and table_name = 'T_MDM_PROVINCE_STATE_IN')))),'ALL',3,'T','ROW','FUNCTION',1,1,'ISO02_ALPHA',NULL,NULL,NULL,'ISO02_ALPHA','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_MDM_PROVINCE_STATE_IN') and table_name = 'T_MDM_PROVINCE_STATE_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that LGL_ENTY_ID is not null','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_MDM_SIGNING_AUTHORITY_IN') and table_name = 'T_MDM_SIGNING_AUTHORITY_IN')))),'ALL',3,'T','ROW','FUNCTION',1,1,'LGL_ENTY_ID',NULL,NULL,NULL,'LGL_ENTY_ID','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_MDM_SIGNING_AUTHORITY_IN') and table_name = 'T_MDM_SIGNING_AUTHORITY_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that JRNL_LINE_AMT_ORIG_CRNCY is a correctly formated number','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_Q0T_CASHFLOW_IN') and table_name = 'T_Q0T_CASHFLOW_IN')))),'ALL',4,'T','ROW','FUNCTION',6,6,'JRNL_LINE_AMT_ORIG_CRNCY',NULL,NULL,NULL,'JRNL_LINE_AMT_ORIG_CRNCY','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_Q0T_CASHFLOW_IN') and table_name = 'T_Q0T_CASHFLOW_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that BUS_PRTNR is a correctly formated number','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_Q0T_CASHFLOW_IN') and table_name = 'T_Q0T_CASHFLOW_IN')))),'ALL',4,'T','ROW','FUNCTION',6,6,'BUS_PRTNR',NULL,NULL,NULL,'BUS_PRTNR','A',NULL,'S4AN5P',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_Q0T_CASHFLOW_IN') and table_name = 'T_Q0T_CASHFLOW_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that TRAN_EFF_DT is a correctly formated date','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_Q0T_CASHFLOW_IN') and table_name = 'T_Q0T_CASHFLOW_IN')))),'ALL',4,'T','ROW','FUNCTION',5,5,'TRAN_EFF_DT,''MM/DD/YYYY''',NULL,NULL,NULL,'TRAN_EFF_DT','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_Q0T_CASHFLOW_IN') and table_name = 'T_Q0T_CASHFLOW_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_COST_CENTRE to map COST_CNTR_CD|TRAN_EFF_DT in T_Q0T_CASHFLOW_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_Q0T_CASHFLOW_IN') and table_name = 'T_Q0T_CASHFLOW_IN')))),'ALL',5,'B','ROW','FUNCTION',8,8,'COST_CNTR_CD, ''COST_CNTR_CD'', ''REF_COST_CENTRE'',''TO_DATE(''''''||TRAN_EFF_DT||'''''', ''''MM/DD/YYYY'''') BETWEEN ACTIVE_FROM_DATE AND ACTIVE_TO_DATE ''',NULL,NULL,NULL,'COST_CNTR_CD|TRAN_EFF_DT','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_Q0T_CASHFLOW_IN') and table_name = 'T_Q0T_CASHFLOW_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check if DR and CR amounts net to 0 by currency, ledger company and effective date ','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_Q0T_CASHFLOW_IN') and table_name = 'T_Q0T_CASHFLOW_IN')))),'ALL',4,'T','TOTALS','FUNCTION',16,16,'SESSION_ID',NULL,NULL,NULL,'JRNL_LINE_AMT_ORIG_CRNCY','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_Q0T_CASHFLOW_IN') and table_name = 'T_Q0T_CASHFLOW_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_GL_EVENT_CODE to map EVT_CD in T_Q0T_CASHFLOW_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_Q0T_CASHFLOW_IN') and table_name = 'T_Q0T_CASHFLOW_IN')))),'ALL',5,'B','ROW','FUNCTION',15,15,'EVT_CD, ''EVT_CD_CD'', ''REF_GL_EVENT_CODE'',''ACTIVE_INDICATOR = ''''A''''''',NULL,NULL,NULL,'EVT_CD','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_Q0T_CASHFLOW_IN') and table_name = 'T_Q0T_CASHFLOW_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_GL_ACCOUNT to map CORSO_ACCT_CD in T_Q0T_CASHFLOW_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_Q0T_CASHFLOW_IN') and table_name = 'T_Q0T_CASHFLOW_IN')))),'ALL',5,'B','ROW','FUNCTION',15,15,'CORSO_ACCT_CD, ''ACCT_CD'', ''REF_GL_ACCOUNT'',''ACTIVE_INDICATOR = ''''A''''''',NULL,NULL,NULL,'CORSO_ACCT_CD','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_Q0T_CASHFLOW_IN') and table_name = 'T_Q0T_CASHFLOW_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_GL_SUB_ACCOUNT to map SBCCNT_CD in T_Q0T_CASHFLOW_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_Q0T_CASHFLOW_IN') and table_name = 'T_Q0T_CASHFLOW_IN')))),'ALL',5,'B','ROW','FUNCTION',15,15,'SBCCNT_CD, ''SBCCNT_CD'', ''REF_GL_SUB_ACCOUNT'',''ACTIVE_INDICATOR = ''''A''''''',NULL,NULL,NULL,'SBCCNT_CD','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_Q0T_CASHFLOW_IN') and table_name = 'T_Q0T_CASHFLOW_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_GL_LEDGER_COMPANY to map LDGR_CO_CD in T_Q0T_CASHFLOW_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_Q0T_CASHFLOW_IN') and table_name = 'T_Q0T_CASHFLOW_IN')))),'ALL',5,'B','ROW','FUNCTION',15,15,'LDGR_CO_CD, ''LDGR_CO_CD'', ''REF_GL_LEDGER_COMPANY'',''ACTIVE_INDICATOR = ''''A''''''',NULL,NULL,NULL,'LDGR_CO_CD','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_Q0T_CASHFLOW_IN') and table_name = 'T_Q0T_CASHFLOW_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_CURRENCY to map ORIG_CRNCY_CD in T_Q0T_CASHFLOW_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_Q0T_CASHFLOW_IN') and table_name = 'T_Q0T_CASHFLOW_IN')))),'ALL',5,'B','ROW','FUNCTION',8,8,'ORIG_CRNCY_CD, ''CRNCY_CD'', ''REF_CURRENCY'',''ACTIVE_INDICATOR = ''''Active''''''',NULL,NULL,NULL,'ORIG_CRNCY_CD','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_Q0T_CASHFLOW_IN') and table_name = 'T_Q0T_CASHFLOW_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in V_GM071_BETT_GROUP___CORDL to map BUS_EVT_TRAN_TYP_SDL in T_G51_VOLUME_OUT to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G51_VOLUME_OUT') and table_name = 'T_G51_VOLUME_OUT')))),'ALL',5,'B','ROW','FUNCTION',21,21,'BUS_EVT_TRAN_TYP_SDL, ''BUS_EVT_TRAN_TYP_SDL'', ''DQ_USER.v_gm071_bett_group___cordl'', ''ref.btt_grp in (select BETT_GROUP from DQ_USER.v_gm138_bett_group_to_toa)''',NULL,NULL,NULL,'BUS_EVT_TRAN_TYP_SDL','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G51_VOLUME_OUT') and table_name = 'T_G51_VOLUME_OUT'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_COMBINED_ACCORDION to map BUS_EVT_TRAN_TYP_SDL in T_G51_VOLUME_VALUATED_OUT to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G51_VOLUME_VALUATED_OUT') and table_name = 'T_G51_VOLUME_VALUATED_OUT')))),'ALL',5,'B','ROW','FUNCTION',21,21,'BUS_EVT_TRAN_TYP_SDL, ''SDL_ID'', ''REF_COMBINED_ACCORDION'', ''master_data_id=''''11178312'''' AND domain_code in (select BETT from v_gm088_bett_to_toa )''',NULL,NULL,NULL,'BUS_EVT_TRAN_TYP_SDL','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G51_VOLUME_VALUATED_OUT') and table_name = 'T_G51_VOLUME_VALUATED_OUT'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in V_GM090_CORDL_TO_ORIGSYS to map SRC_SYS_CD in T_G51_VOLUME_OUT to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G51_VOLUME_OUT') and table_name = 'T_G51_VOLUME_OUT')))),'ALL',5,'B','ROW','FUNCTION',21,21,'SRC_SYS_CD, ''SRC_SYS_CD'' , ''v_gm090_cordl_to_origsys''',NULL,NULL,NULL,'SRC_SYS_CD','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G51_VOLUME_OUT') and table_name = 'T_G51_VOLUME_OUT'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in V_GM134_TM1_TOA_TO_BETT to map TOA in T_G51_DATCSPR_OUTBVOL_IN to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G51_DATCSPR_OUTBVOL_IN') and table_name = 'T_G51_DATCSPR_OUTBVOL_IN')))),'ALL',5,'B','ROW','FUNCTION',21,21,'TOA,''TOA'' , ''v_gm134_tm1_toa_to_bett''',NULL,NULL,NULL,'TOA','A',NULL,'S4AN5P',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G51_DATCSPR_OUTBVOL_IN') and table_name = 'T_G51_DATCSPR_OUTBVOL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that we have a value in REF_BUDGET_UNIT to map BDGT_UNT_KEY in T_FINANCIAL_TRANSACTION to','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FINANCIAL_TRANSACTION') and table_name = 'T_FINANCIAL_TRANSACTION')))),'UCT3002',5,'B','ROW','FUNCTION',21,21,'BDGT_UNT_KEY, ''BDGT_UNT_KEY'' , ''REF_BUDGET_UNIT''',NULL,NULL,NULL,'BDGT_UNT_KEY','A',NULL,'S149NT',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_FINANCIAL_TRANSACTION') and table_name = 'T_FINANCIAL_TRANSACTION'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Do not allow ODP Pricing to be used for a Manhatten contract','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POL_PRC_IN') and table_name = 'T_G71_V_POL_PRC_IN')))),'ACQUIRE_G71',6,'T','ROW','WHERE',NULL,25,NULL,'exists ( select null 
                             from t_g71_v_pol_in pol 
                            where pol.dv_pol_key = T_G71_V_POL_PRC_IN.dv_pol_key 
                              and pol.src_sys_cd = ''MAN'' 
                              and T_G71_V_POL_PRC_IN.dv_rcd_src = ''ODSP'' 
                    )',NULL,NULL,'DV_POL_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_POL_PRC_IN') and table_name = 'T_G71_V_POL_PRC_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Do not allow ODP Pricing to be used for a Manhatten contract','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_DEAL_PRC_IN') and table_name = 'T_G71_V_DEAL_PRC_IN')))),'ACQUIRE_G71',6,'T','ROW','FUNCTION',25,25,'''t_g71_v_deal_prc_in prc'',gateway_id,'' exists ( select null from t_g71_v_deal_in deal where deal.dv_deal_key = prc.dv_deal_key and deal.src_sys_cd = ''''MAN'''' and prc.dv_rcd_src = ''''ODSP'''' )''',NULL,NULL,NULL,'DV_DEAL_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_V_DEAL_PRC_IN') and table_name = 'T_G71_V_DEAL_PRC_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Do not allow Policy which are New and Cancelled ','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLICY_IN') and table_name = 'T_G71_POLICY_IN')))),'ACQUIRE_G71',3,'T','ROW','FUNCTION',25,25,'''T_G71_POLICY_IN pi'',GATEWAY_ID,''( pi.CANC_DT is NOT NULL  or pi.COMMUT_IND_SDL IN (1020534,1020537) )  and pi.EXT_MNGD_CONTR_IND = ''''NO''''  and not exists ( SELECT null FROM ref_policy rp where rp.pol_key = pi.pol_key  )''',NULL,NULL,NULL,'POL_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLICY_IN') and table_name = 'T_G71_POLICY_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Do not allow Policy insured detail which are New and Cancelled ','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLINSRDDTL_IN') and table_name = 'T_G71_POLINSRDDTL_IN')))),'ACQUIRE_G71',3,'T','ROW','FUNCTION',25,25,'''T_G71_POLINSRDDTL_IN pid'',GATEWAY_ID,''( pid.CANC_DT is NOT NULL  or pid.COMMUT_IND_SDL IN (1020534,1020537) )  and pid.EXT_MNGD_CONTR_IND = ''''NO''''  and not exists ( SELECT null FROM ref_policy rp where rp.pol_key = pid.pol_key  )''',NULL,NULL,NULL,'POL_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLINSRDDTL_IN') and table_name = 'T_G71_POLINSRDDTL_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Do not allow Policy pricing which are New and Cancelled ','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLICY_PRICING_IN') and table_name = 'T_G71_POLICY_PRICING_IN')))),'ACQUIRE_G71',3,'T','ROW','FUNCTION',25,25,'''T_G71_POLICY_PRICING_IN ppi'',GATEWAY_ID,'' exists ( select null from T_G71_POLICY_IN pi  where pi.pol_key = ppi.pol_key and  ( pi.CANC_DT is NOT NULL  or pi.COMMUT_IND_SDL IN (1020534,1020537) )  and pi.EXT_MNGD_CONTR_IND = ''''NO'''' )  and not exists ( SELECT null FROM ref_policy rp where rp.pol_key = ppi.pol_key  )''',NULL,NULL,NULL,'POL_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLICY_PRICING_IN') and table_name = 'T_G71_POLICY_PRICING_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Do not allow deal associated with Policy which are New and Cancelled ','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLICY_DEAL_X_IN') and table_name = 'T_G71_POLICY_DEAL_X_IN')))),'ACQUIRE_G71',3,'T','ROW','FUNCTION',25,25,'''T_G71_POLICY_DEAL_X_IN pdx'',GATEWAY_ID,'' exists ( select null from T_G71_POLICY_IN pi  where pi.pol_key = pdx.pol_key and  ( pi.CANC_DT is NOT NULL  or pi.COMMUT_IND_SDL IN (1020534,1020537) )  and pi.EXT_MNGD_CONTR_IND = ''''NO'''' )  and not exists ( SELECT null FROM ref_policy rp where rp.pol_key = pdx.pol_key  )''',NULL,NULL,NULL,'POL_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLICY_DEAL_X_IN') and table_name = 'T_G71_POLICY_DEAL_X_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Do not allow Partner Policy which are New and Cancelled ','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_PARTNER_POLICY_X_IN') and table_name = 'T_G71_PARTNER_POLICY_X_IN')))),'ACQUIRE_G71',3,'T','ROW','FUNCTION',25,25,'''T_G71_PARTNER_POLICY_X_IN ppi'',GATEWAY_ID,'' exists ( select null from T_G71_POLICY_IN pi  where pi.pol_key = ppi.pol_key and  ( pi.CANC_DT is NOT NULL  or pi.COMMUT_IND_SDL IN (1020534,1020537) )  and pi.EXT_MNGD_CONTR_IND = ''''NO'''' )  and not exists ( SELECT null FROM ref_policy rp where rp.pol_key = ppi.pol_key  )''',NULL,NULL,NULL,'POL_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_PARTNER_POLICY_X_IN') and table_name = 'T_G71_PARTNER_POLICY_X_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Do not allow Policy which are New and Cancelled ','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLINSRDDTL_REINS_X_IN') and table_name = 'T_G71_POLINSRDDTL_REINS_X_IN')))),'ACQUIRE_G71',3,'T','ROW','FUNCTION',25,25,'''T_G71_POLINSRDDTL_REINS_X_IN pri'',GATEWAY_ID,'' exists ( select null from T_G71_POLICY_IN pi join T_G71_POLINSRDDTL_IN pid on pid.pol_key = pi.pol_key left join ref_policy rp on rp.pol_key  = pi.pol_key  where pri.pol_insrd_det_key = pid.pol_insrd_det_key and  ( pi.CANC_DT is NOT NULL  or pi.COMMUT_IND_SDL IN (1020534,1020537) )  and pi.EXT_MNGD_CONTR_IND = ''''NO'''' and rp.pol_key is null )''',NULL,NULL,NULL,'POL_INSRD_DET_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLINSRDDTL_REINS_X_IN') and table_name = 'T_G71_POLINSRDDTL_REINS_X_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Do not allow Reinsurance agreement which are New and Cancelled ','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_REINSURANCE_IN') and table_name = 'T_G71_REINSURANCE_IN')))),'ACQUIRE_G71',3,'T','ROW','FUNCTION',25,25,'''T_G71_REINSURANCE_IN ri'',GATEWAY_ID,''( ri.CANC_DT is NOT NULL  or ri.COMMUT_IND_SDL IN (1020534,1020537) )  and ri.EXT_MNGD_CONTR_IND = ''''NO''''  and not exists ( SELECT null FROM ref_reinsurance rp where rp.REINS_AGRMNT_KEY = ri.REINS_AGRMNT_KEY  )''',NULL,NULL,NULL,'REINS_AGRMNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_REINSURANCE_IN') and table_name = 'T_G71_REINSURANCE_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Do not allow Pricing related Reinsurance which are New and Cancelled ','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_REINSAGRMNT_PRICING_IN') and table_name = 'T_G71_REINSAGRMNT_PRICING_IN')))),'ACQUIRE_G71',3,'T','ROW','FUNCTION',25,25,'''T_G71_REINSAGRMNT_PRICING_IN rpi'',GATEWAY_ID,'' exists ( select null from T_G71_REINSURANCE_IN pi  where pi.REINS_AGRMNT_KEY = rpi.REINSAGRMNT_KEY and  ( pi.CANC_DT is NOT NULL  or pi.COMMUT_IND_SDL IN (1020534,1020537) )  and pi.EXT_MNGD_CONTR_IND = ''''NO'''' )  and not exists ( SELECT null FROM ref_reinsurance rp where rp.REINS_AGRMNT_KEY = rpi.REINSAGRMNT_KEY  )''',NULL,NULL,NULL,'REINSAGRMNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_REINSAGRMNT_PRICING_IN') and table_name = 'T_G71_REINSAGRMNT_PRICING_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Do not allow Reinsurance which are New and Cancelled ','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLINSRDDTL_REINS_X_IN') and table_name = 'T_G71_POLINSRDDTL_REINS_X_IN')))),'ACQUIRE_G71',3,'T','ROW','FUNCTION',25,25,'''T_G71_POLINSRDDTL_REINS_X_IN prx'',GATEWAY_ID,'' exists ( select null from T_G71_REINSURANCE_IN pi  where pi.REINS_AGRMNT_KEY = prx.REINS_AGRMNT_KEY and  ( pi.CANC_DT is NOT NULL  or pi.COMMUT_IND_SDL IN (1020534,1020537) )  and pi.EXT_MNGD_CONTR_IND = ''''NO'''' )  and not exists ( SELECT null FROM ref_reinsurance rp where rp.REINS_AGRMNT_KEY = prx.REINS_AGRMNT_KEY  )''',NULL,NULL,NULL,'POL_INSRD_DET_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_POLINSRDDTL_REINS_X_IN') and table_name = 'T_G71_POLINSRDDTL_REINS_X_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Do not allow Partner Reinsurance which are New and Cancelled ','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_PARTNER_REINSRNCE_X_IN') and table_name = 'T_G71_PARTNER_REINSRNCE_X_IN')))),'ACQUIRE_G71',3,'T','ROW','FUNCTION',25,25,'''T_G71_PARTNER_REINSRNCE_X_IN prx'',GATEWAY_ID,'' exists ( select null from T_G71_REINSURANCE_IN pi  where pi.REINS_AGRMNT_KEY = prx.REINS_AGRMNT_KEY and  ( pi.CANC_DT is NOT NULL  or pi.COMMUT_IND_SDL IN (1020534,1020537) )  and pi.EXT_MNGD_CONTR_IND = ''''NO'''' )  and not exists ( SELECT null FROM ref_reinsurance rp where rp.REINS_AGRMNT_KEY = prx.REINS_AGRMNT_KEY  )''',NULL,NULL,NULL,'REINS_AGRMNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_PARTNER_REINSRNCE_X_IN') and table_name = 'T_G71_PARTNER_REINSRNCE_X_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Do not allow allow transaction related to policies which are New and Cancelled ','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_FINANCIAL_TRANSACTION_IN') and table_name = 'T_G71_FINANCIAL_TRANSACTION_IN')))),'ACQUIRE_G71',3,'T','ROW','FUNCTION',25,25,'''T_G71_FINANCIAL_TRANSACTION_IN fti'',GATEWAY_ID,'' exists ( select null from T_G71_POLICY_IN pi join T_G71_POLINSRDDTL_IN pid on pid.pol_key = pi.pol_key left join ref_policy rp on rp.pol_key  = pi.pol_key  where fti.pol_insrd_det_key = pid.pol_insrd_det_key and  ( pi.CANC_DT is NOT NULL  or pi.COMMUT_IND_SDL IN (1020534,1020537) )  and pi.EXT_MNGD_CONTR_IND = ''''NO'''' and rp.pol_key is null )''',NULL,NULL,NULL,'POL_INSRD_DET_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_FINANCIAL_TRANSACTION_IN') and table_name = 'T_G71_FINANCIAL_TRANSACTION_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Do not allow allow transaction related to reinsurance agreement which are New and Cancelled ','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_FINANCIAL_TRANSACTION_IN') and table_name = 'T_G71_FINANCIAL_TRANSACTION_IN')))),'ACQUIRE_G71',3,'T','ROW','FUNCTION',25,25,'''T_G71_FINANCIAL_TRANSACTION_IN fti'',GATEWAY_ID,'' exists ( select null from T_G71_REINSURANCE_IN pi left join ref_reinsurance rp on rp.reins_agrmnt_key = pi.reins_agrmnt_key  where fti.reins_agrmnt_key = pi.reins_agrmnt_key and  ( pi.CANC_DT is NOT NULL  or pi.COMMUT_IND_SDL IN (1020534,1020537) )  and pi.EXT_MNGD_CONTR_IND = ''''NO'''' and rp.reins_agrmnt_key is null )''',NULL,NULL,NULL,'REINS_AGRMNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_FINANCIAL_TRANSACTION_IN') and table_name = 'T_G71_FINANCIAL_TRANSACTION_IN'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Do not allow allow uv transaction related to policies which are New and Cancelled ','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_UV_BREAKDOWN_FIN_TRX') and table_name = 'T_G71_UV_BREAKDOWN_FIN_TRX')))),'ACQUIRE_G71',3,'T','ROW','FUNCTION',25,25,'''T_G71_UV_BREAKDOWN_FIN_TRX uv'',GATEWAY_ID,'' exists ( select null from T_G71_POLICY_IN pi join T_G71_POLINSRDDTL_IN pid on pid.pol_key = pi.pol_key left join ref_policy rp on rp.pol_key  = pi.pol_key  where uv.pol_insrd_det_key = pid.pol_insrd_det_key and  ( pi.CANC_DT is NOT NULL  or pi.COMMUT_IND_SDL IN (1020534,1020537) )  and pi.EXT_MNGD_CONTR_IND = ''''NO'''' and rp.pol_key is null )''',NULL,NULL,NULL,'POL_INSRD_DET_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_UV_BREAKDOWN_FIN_TRX') and table_name = 'T_G71_UV_BREAKDOWN_FIN_TRX'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Do not allow allow transaction related to reinsurance agreement which are New and Cancelled ','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_UV_BREAKDOWN_FIN_TRX') and table_name = 'T_G71_UV_BREAKDOWN_FIN_TRX')))),'ACQUIRE_G71',3,'T','ROW','FUNCTION',25,25,'''T_G71_UV_BREAKDOWN_FIN_TRX uv'',GATEWAY_ID,'' exists ( select null from T_G71_REINSURANCE_IN pi left join ref_reinsurance rp on rp.reins_agrmnt_key = pi.reins_agrmnt_key  where uv.bdgt_unt_key = pi.bdgt_unt_key and  ( pi.CANC_DT is NOT NULL  or pi.COMMUT_IND_SDL IN (1020534,1020537) )  and pi.EXT_MNGD_CONTR_IND = ''''NO'''' and rp.reins_agrmnt_key is null )''',NULL,NULL,NULL,'BDGT_UNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_UV_BREAKDOWN_FIN_TRX') and table_name = 'T_G71_UV_BREAKDOWN_FIN_TRX'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that the T_PLAN_PRJCTN_AMOUNTS record joins to a Budget Unit in REF_BUDGET_UNIT','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_AMOUNTS') and table_name = 'T_PLAN_PRJCTN_AMOUNTS')))),'ALL',3,'T','ROW','WHERE',NULL,14,NULL,'not exists ( select null 
                              from ref_budget_unit                            bu 
                               where bu.bdgt_unt_key       = T_PLAN_PRJCTN_AMOUNTS.bdgt_unt_key
                     )',NULL,NULL,'BDGT_UNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_AMOUNTS') and table_name = 'T_PLAN_PRJCTN_AMOUNTS'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that the T_PLAN_PRJCTN_AMOUNTS record joins to a Line of Business in REF_LINE_OF_BUSINESS','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_AMOUNTS') and table_name = 'T_PLAN_PRJCTN_AMOUNTS')))),'ALL',3,'T','ROW','WHERE',NULL,14,NULL,'not exists ( select null 
                              from ref_budget_unit                            bu 
                              JOIN DQ_USER.ref_line_of_business                              lob
                                ON bu.line_bus_sdl         = lob.line_bus_sdl      
                               where bu.bdgt_unt_key       = T_PLAN_PRJCTN_AMOUNTS.bdgt_unt_key
                     ) ',NULL,NULL,'BDGT_UNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_AMOUNTS') and table_name = 'T_PLAN_PRJCTN_AMOUNTS'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that the T_PLAN_PRJCTN_AMOUNTS record joins to a TOBH in V_GM042_CORDL_TO_TOBH','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_AMOUNTS') and table_name = 'T_PLAN_PRJCTN_AMOUNTS')))),'ALL',3,'T','ROW','WHERE',NULL,14,NULL,'not exists ( select null 
                              from ref_budget_unit                            bu 
                              JOIN DQ_USER.v_gm042_cordl_to_tobh              v_gm042
                                ON bu.bus_partic_typ_sdl = v_gm042.bus_partic_typ 
                               AND bu.typ_agrmnt_sdl     = v_gm042.typ_agrmnt     
                               where bu.bdgt_unt_key       = T_PLAN_PRJCTN_AMOUNTS.bdgt_unt_key
                     )',NULL,NULL,'BDGT_UNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_AMOUNTS') and table_name = 'T_PLAN_PRJCTN_AMOUNTS'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that the T_PLAN_PRJCTN_AMOUNTS record joins to a TOA in V_GM088_BETT_TO_TOA','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_AMOUNTS') and table_name = 'T_PLAN_PRJCTN_AMOUNTS')))),'ALL',3,'T','ROW','WHERE',NULL,14,NULL,'not exists (  select null 
                              from DQ_USER.v_gm088_bett_to_toa     v_gm088
                              JOIN DQ_USER.ref_combined_accordion  rca
                                ON v_gm088.bett                     = rca.domain_code        
                               AND v_gm088.active_indicator         = ''A'' 
                             WHERE rca.master_data_id               = 11178312               
                               AND rca.active_indicator             = ''Active''       
                               AND rca.sdl_id                       = T_PLAN_PRJCTN_AMOUNTS.bus_evt_tran_typ_sdl
                     ) ',NULL,NULL,'BDGT_UNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_AMOUNTS') and table_name = 'T_PLAN_PRJCTN_AMOUNTS'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that the T_PLAN_PRJCTN_AMOUNTS record joins to a system in V_GM090_CORDL_TO_ORIGSYS','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_AMOUNTS') and table_name = 'T_PLAN_PRJCTN_AMOUNTS')))),'ALL',3,'T','ROW','WHERE',NULL,14,NULL,'not exists ( select null 
                              from DQ_USER.v_gm090_cordl_to_origsys v_gm090
                             WHERE v_gm090.src_sys_cd = T_PLAN_PRJCTN_AMOUNTS.src_sys_cd
                     ) ',NULL,NULL,'BDGT_UNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_AMOUNTS') and table_name = 'T_PLAN_PRJCTN_AMOUNTS'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that the T_PLAN_PRJCTN_BUDGET_UNIT record joins to a Budget Unit in REF_BUDGET_UNIT (Deals only)','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT') and table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT')))),'ALL',3,'T','ROW','JOIN',NULL,14,NULL,'not exists ( select null 
                             from ref_budget_unit bu 
                            where bu.bdgt_unt_key =  T_PLAN_PRJCTN_BUDGET_UNIT.bdgt_unt_key
                         )','JOIN (select distinct 
                      rbu.BDGT_UNT_KEY
                    , rbu.deal_key
                 from DQ_USER.REF_BUDGET_UNIT       rbu
                WHERE rbu.contr_typ    = ''Deal'' 
              ) deal_bu
     ON T_PLAN_PRJCTN_BUDGET_UNIT.bdgt_unt_key = deal_bu.bdgt_unt_key',NULL,'BDGT_UNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT') and table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that the T_PLAN_PRJCTN_BUDGET_UNIT record joins to a Budget Unit in REF_BUDGET_UNIT (Policies only)','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT') and table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT')))),'ALL',3,'T','ROW','JOIN',NULL,14,NULL,'not exists ( select null 
                             from ref_budget_unit bu 
                            where bu.bdgt_unt_key =  T_PLAN_PRJCTN_BUDGET_UNIT.bdgt_unt_key
                         )','JOIN (select distinct 
                      rbu.BDGT_UNT_KEY
                    , rbu.currt_pol_key
                 from DQ_USER.REF_BUDGET_UNIT       rbu
                WHERE rbu.contr_typ    = ''Policy'' 
              ) policy_bu
     ON T_PLAN_PRJCTN_BUDGET_UNIT.bdgt_unt_key = policy_bu.bdgt_unt_key',NULL,'BDGT_UNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT') and table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that the T_PLAN_PRJCTN_BUDGET_UNIT record joins to a Budget Unit in V_CORDL_CONTRACT_LATEST (RAs only)','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT') and table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT')))),'ALL',3,'T','ROW','JOIN',NULL,14,NULL,'not exists ( select null 
                             from v_cordl_contract_latest ccl 
                            where ccl.contr_key =  ra_bu.REINS_AGRMNT_KEY
                         )','JOIN (select distinct 
                      rbu.BDGT_UNT_KEY
                    , rbu.REINS_AGRMNT_KEY
                 from DQ_USER.REF_BUDGET_UNIT          rbu
                WHERE rbu.contr_typ      = ''Reinsurance Agreement'' 
              ) ra_bu
           ON T_PLAN_PRJCTN_BUDGET_UNIT.bdgt_unt_key = ra_bu.bdgt_unt_key',NULL,'BDGT_UNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT') and table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that the T_PLAN_PRJCTN_BUDGET_UNIT record joins to a Deal in REF_Deal (Deals only)','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT') and table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT')))),'ALL',3,'T','ROW','JOIN',NULL,14,NULL,'not exists ( select null 
                             from ref_deal d 
                            where d.deal_key =  deal_bu.deal_key
                         )','JOIN (select distinct 
                      rbu.BDGT_UNT_KEY
                    , d.deal_key
                 from DQ_USER.REF_BUDGET_UNIT       rbu
                 JOIN DQ_USER.REF_DEAL              d
                   ON d.deal_key = rbu.deal_key
                WHERE rbu.contr_typ    = ''Deal'' 
              ) deal_bu
     ON T_PLAN_PRJCTN_BUDGET_UNIT.bdgt_unt_key = deal_bu.bdgt_unt_key',NULL,'BDGT_UNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT') and table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that the T_PLAN_PRJCTN_BUDGET_UNIT record joins to a Line of Business in REF_LINE_OF_BUSINESS (Deals Only)','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT') and table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT')))),'ALL',3,'T','ROW','JOIN',NULL,14,NULL,'NOT EXISTS ( SELECT null 
                             FROM ref_deal                                    d
                             JOIN DQ_USER.ref_line_of_business                lob
                               ON d.line_bus_sdl       = lob.line_bus_sdl      
                              AND lob.active_indicator = ''Active'' 
                            WHERE d.deal_key           = deal_bu.deal_key
                          )','JOIN (select distinct 
                      rbu.BDGT_UNT_KEY
                    , d.deal_key
                 from DQ_USER.REF_BUDGET_UNIT       rbu
                 JOIN DQ_USER.REF_DEAL              d
                   ON d.deal_key = rbu.deal_key
                WHERE rbu.contr_typ    = ''Deal'' 
              ) deal_bu
     ON T_PLAN_PRJCTN_BUDGET_UNIT.bdgt_unt_key = deal_bu.bdgt_unt_key',NULL,'BDGT_UNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT') and table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that the T_PLAN_PRJCTN_BUDGET_UNIT record joins to a TOBH in V_GM042_CORDL_TO_TOBH  (Deals Only)','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT') and table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT')))),'ALL',3,'T','ROW','JOIN',NULL,14,NULL,'not exists ( select null 
                              from ref_budget_unit                            bu 
                              JOIN DQ_USER.V_GM042_CORDL_TO_TOBH              v_gm042
                                ON bu.bus_partic_typ_sdl      = v_gm042.bus_partic_typ                    
                               AND bu.typ_agrmnt_sdl          = v_gm042.typ_agrmnt                        
                               AND v_gm042.active_indicator   = ''A''       
                             where bu.bdgt_unt_key            = T_PLAN_PRJCTN_BUDGET_UNIT.bdgt_unt_key
                     )','JOIN (select distinct 
                      rbu.BDGT_UNT_KEY
                    , d.deal_key
                 from DQ_USER.REF_BUDGET_UNIT       rbu
                 JOIN DQ_USER.REF_DEAL              d
                   ON d.deal_key = rbu.deal_key
                WHERE rbu.contr_typ    = ''Deal'' 
              ) deal_bu
     ON T_PLAN_PRJCTN_BUDGET_UNIT.bdgt_unt_key = deal_bu.bdgt_unt_key',NULL,'BDGT_UNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT') and table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that the T_PLAN_PRJCTN_BUDGET_UNIT record joins to a system in V_GM090_CORDL_TO_ORIGSYS  (Deals Only)','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT') and table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT')))),'ALL',3,'T','ROW','JOIN',NULL,14,NULL,'NOT EXISTS ( SELECT null 
                             FROM ref_deal                                       d
                             JOIN DQ_USER.v_gm090_cordl_to_origsys               v_gm090
                               ON v_gm090.src_sys_cd       = d.src_sys_cd
                              AND v_gm090.active_indicator = ''A''
                            WHERE d.deal_key               = deal_bu.deal_key
                          )','JOIN (select distinct 
                      rbu.BDGT_UNT_KEY
                    , d.deal_key
                 from DQ_USER.REF_BUDGET_UNIT       rbu
                 JOIN DQ_USER.REF_DEAL              d
                   ON d.deal_key = rbu.deal_key
                WHERE rbu.contr_typ    = ''Deal'' 
              ) deal_bu
     ON T_PLAN_PRJCTN_BUDGET_UNIT.bdgt_unt_key = deal_bu.bdgt_unt_key',NULL,'BDGT_UNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT') and table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that the T_PLAN_PRJCTN_BUDGET_UNIT record joins to a legal entity in REF_LEGAL_ENTITY  (Deals Only)','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT') and table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT')))),'ALL',3,'T','ROW','JOIN',NULL,14,NULL,'NOT EXISTS ( SELECT null 
                             FROM ref_deal                                     d
                             JOIN DQ_USER.REF_LEGAL_ENTITY                     le
                               ON d.lgl_enty_sdl           = le.lgl_enty_sdl                           
                              AND le.active_indicator      = ''Active''     
                            WHERE d.deal_key               = deal_bu.deal_key
                          )','JOIN (select distinct 
                      rbu.BDGT_UNT_KEY
                    , d.deal_key
                 from DQ_USER.REF_BUDGET_UNIT       rbu
                 JOIN DQ_USER.REF_DEAL              d
                   ON d.deal_key = rbu.deal_key
                WHERE rbu.contr_typ    = ''Deal'' 
              ) deal_bu
     ON T_PLAN_PRJCTN_BUDGET_UNIT.bdgt_unt_key = deal_bu.bdgt_unt_key',NULL,'BDGT_UNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT') and table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that the T_PLAN_PRJCTN_BUDGET_UNIT record joins to a claim basis in REF_COMBINED_ACCORDION  (Deals Only)','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT') and table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT')))),'ALL',3,'T','ROW','JOIN',NULL,14,NULL,'NOT EXISTS ( SELECT null 
                              FROM ref_budget_unit                                    bu 
                              JOIN DQ_USER.REF_COMBINED_ACCORDION                     contr_typ
                                ON contr_typ.sdl_id                 = bu.clm_basis_sdl                             
                               AND contr_typ.master_data_id         = 1003627     
                             WHERE bu.bdgt_unt_key                  = T_PLAN_PRJCTN_BUDGET_UNIT.bdgt_unt_key
                     )','JOIN (select distinct 
                      rbu.BDGT_UNT_KEY
                    , d.deal_key
                 from DQ_USER.REF_BUDGET_UNIT       rbu
                 JOIN DQ_USER.REF_DEAL              d
                   ON d.deal_key = rbu.deal_key
                WHERE rbu.contr_typ    = ''Deal'' 
              ) deal_bu
     ON T_PLAN_PRJCTN_BUDGET_UNIT.bdgt_unt_key = deal_bu.bdgt_unt_key',NULL,'BDGT_UNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT') and table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that the T_PLAN_PRJCTN_BUDGET_UNIT record joins to a Product Information value in REF_COMBINED_ACCORDION  (Deals Only)','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT') and table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT')))),'ALL',3,'T','ROW','JOIN',NULL,14,NULL,'NOT EXISTS ( SELECT null 
                              FROM ref_budget_unit                                    bu 
                              JOIN DQ_USER.REF_COMBINED_ACCORDION                     prod_inf
                                ON prod_inf.sdl_id                  = bu.prod_hub_sdl                              
                               AND prod_inf.master_data_id          = 1023069   
                             WHERE bu.bdgt_unt_key                  = T_PLAN_PRJCTN_BUDGET_UNIT.bdgt_unt_key
                     )','JOIN (select distinct 
                      rbu.BDGT_UNT_KEY
                    , d.deal_key
                 from DQ_USER.REF_BUDGET_UNIT       rbu
                 JOIN DQ_USER.REF_DEAL              d
                   ON d.deal_key = rbu.deal_key
                WHERE rbu.contr_typ    = ''Deal'' 
              ) deal_bu
     ON T_PLAN_PRJCTN_BUDGET_UNIT.bdgt_unt_key = deal_bu.bdgt_unt_key',NULL,'BDGT_UNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT') and table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that the T_PLAN_PRJCTN_BUDGET_UNIT record joins to a Business Segment in REF_COMBINED_ACCORDION  (Deals Only)','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT') and table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT')))),'ALL',3,'T','ROW','JOIN',NULL,14,NULL,'NOT EXISTS ( SELECT null 
                             FROM ref_deal                                          d
                             JOIN DQ_USER.REF_LEGAL_ENTITY                          le
                               ON d.lgl_enty_sdl                 = le.lgl_enty_sdl
                              AND le.active_indicator            = ''Active''
                             JOIN DQ_USER.REF_COMBINED_ACCORDION                    bus_seg
                               ON bus_seg.sdl_id                 = le.bus_sgmt_sdl
                              AND d.lgl_enty_sdl                 = le.lgl_enty_sdl
                              AND le.active_indicator            = ''Active''
                              AND bus_seg.master_data_id         = 1022640
                            WHERE d.deal_key                     = deal_bu.deal_key
                          )','JOIN (select distinct 
                      rbu.BDGT_UNT_KEY
                    , d.deal_key
                 from DQ_USER.REF_BUDGET_UNIT       rbu
                 JOIN DQ_USER.REF_DEAL              d
                   ON d.deal_key = rbu.deal_key
                WHERE rbu.contr_typ    = ''Deal'' 
              ) deal_bu
     ON T_PLAN_PRJCTN_BUDGET_UNIT.bdgt_unt_key = deal_bu.bdgt_unt_key',NULL,'BDGT_UNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT') and table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that the T_PLAN_PRJCTN_BUDGET_UNIT record joins to a Type of Program Business in REF_COMBINED_ACCORDION  (Deals Only)','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT') and table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT')))),'ALL',3,'T','ROW','JOIN',NULL,14,NULL,'NOT EXISTS ( SELECT null 
                             FROM ref_deal                                          d
                             JOIN DQ_USER.REF_COMBINED_ACCORDION                    typ_prog
                               ON typ_prog.sdl_id                  = d.deal_typ_sdl
                              AND typ_prog.active_indicator        = ''Active''                                  
                              AND typ_prog.master_data_id          = 2001262     
                            WHERE d.deal_key                       = deal_bu.deal_key
                          )','JOIN (select distinct 
                      rbu.BDGT_UNT_KEY
                    , d.deal_key
                 from DQ_USER.REF_BUDGET_UNIT       rbu
                 JOIN DQ_USER.REF_DEAL              d
                   ON d.deal_key = rbu.deal_key
                WHERE rbu.contr_typ    = ''Deal'' 
              ) deal_bu
     ON T_PLAN_PRJCTN_BUDGET_UNIT.bdgt_unt_key = deal_bu.bdgt_unt_key',NULL,'BDGT_UNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT') and table_name = 'T_PLAN_PRJCTN_BUDGET_UNIT'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Check that the budget unit ratio is equal to 1','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_BUDGET_UNIT_RATIO') and table_name = 'T_BUDGET_UNIT_RATIO')))),'ALL',3,'T','ROW','FUNCTION',25,25,'''T_BUDGET_UNIT_RATIO bur'',GATEWAY_ID,'' exists (  select null from
(
select 
    bu.bdgt_unt_key 
  ,   (  sum( BDGT_UNT_RAT_NMRTR  )  over ( partition by CURRT_POL_KEY , UWRT_YR , bur.session_id order by null )
       / max( BDGT_UNT_RAT_DNMNTR )  over ( partition by CURRT_POL_KEY , UWRT_YR , bur.session_id order by null )
     ) as ratio
  from ref_budget_unit bu
join t_budget_unit_ratio bur on bur.BDGT_UNT_KEY = bu.BDGT_UNT_KEY
where bu.CONTR_TYP = ''''Policy''''
union all
/*
select 
    bu.bdgt_unt_key 
  ,   (  sum( BDGT_UNT_RAT_NMRTR  )  over ( partition by DEAL_KEY , UWRT_YR , bur.session_id order by null )
       / max( BDGT_UNT_RAT_DNMNTR )  over ( partition by DEAL_KEY , UWRT_YR , bur.session_id order by null )
     ) as ratio
  from ref_budget_unit bu
join t_budget_unit_ratio bur on bur.BDGT_UNT_KEY = bu.BDGT_UNT_KEY
where bu.CONTR_TYP = ''''Deal''''
union all
*/
select 
    bu.bdgt_unt_key 
  ,   (  sum( BDGT_UNT_RAT_NMRTR  )  over ( partition by REINS_AGRMNT_KEY , UWRT_YR , bur.session_id order by null )
       / max( BDGT_UNT_RAT_DNMNTR )  over ( partition by REINS_AGRMNT_KEY , UWRT_YR , bur.session_id order by null )
     ) as ratio
  from ref_budget_unit bu
join t_budget_unit_ratio bur on bur.BDGT_UNT_KEY = bu.BDGT_UNT_KEY
where bu.CONTR_TYP = ''''Reinsurance Agreement'''')ratio
where ratio <> 1
and  ratio.bdgt_unt_key = bur.bdgt_unt_key )''',NULL,NULL,NULL,'BDGT_UNT_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_BUDGET_UNIT_RATIO') and table_name = 'T_BUDGET_UNIT_RATIO'));
INSERT INTO DQ_USER.T_META_TABLE_DQ_CFG ("DQ_PURPOSE","DQ_CORRECTIVE_ACTION","DQ_CONTACT_TEAM","DQ_USE_CASE_ID","DQ_SEVERITY_ID","DQ_RULE_TYPE","DQ_RULE_CATEGORY","DQ_METHOD","DQ_FUNCTION_ID","DQ_MESSAGE_ID","DQ_FUNCTION_PARAMETERS","DQ_WHERE_CLAUSE","DQ_JOIN","DQ_CONDITION_ID","DQ_COLUMN_NAME","DQ_ACTIVE_INDICATOR","DQ_USER_ROLE","USER_ID","TABLE_ID")
  VALUES ('Do not process transactions where the policy is cancelled and the pol_key is not in REF_POLICY','Use the SQL in the DQ_FAILED_DATA_SQL column to find the failed records, then contact the REGEX_SYSTEM team to find a resolution',(select counterparty_system from t_meta_interface where interface_id = (select interface_id from t_meta_batch_task where batch_task_id = (select min(batch_task_id) from t_meta_batch_task_table_x where table_id = (select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_FINANCIAL_TRANSACTION_IN') and table_name = 'T_G71_FINANCIAL_TRANSACTION_IN')))),'ACQUIRE_G71',6,'T','ROW','JOIN',NULL,27,NULL,NULL,'join (select pol.pol_key
             , pid.pol_insrd_det_key
          from T_G71_POLINSRDDTL_IN           pid
          join T_G71_POLICY_IN                pol
            on pol.pol_key = pid.pol_key
         where not exists (SELECT null FROM REF_POLICY WHERE REF_POLICY.POL_KEY = pol.POL_KEY )
           and pol.canc_dt is not null  
       )     structures 
       on structures.pol_insrd_det_key = T_G71_FINANCIAL_TRANSACTION_IN.pol_insrd_det_key',NULL,'POL_INSRD_DET_KEY','A',NULL,'DQ_USER',(select table_id from t_meta_table where technical_user = (select technical_user from t_meta_table where table_name = 'T_G71_FINANCIAL_TRANSACTION_IN') and table_name = 'T_G71_FINANCIAL_TRANSACTION_IN'));

-- Post-Load SQL T_META_TABLE_DQ_CFG
Prompt Post-Load SQL T_META_TABLE_DQ_CFG
prompt merge to T_META_TABLE_DQ_cfg

delete from DQ_USER.T_META_TABLE_DQ target
where not exists (select 1 from DQ_USER.T_META_TABLE_DQ_cfg cfg 
                   where cfg.dq_use_case_id                  = target.dq_use_case_id 
                     and cfg.table_id                        = target.table_id 
                     and cfg.dq_column_name                  = target.dq_column_name 
                     and NVL(cfg.dq_function_parameters,'X') = NVL(target.dq_function_parameters,'X')
                     and NVL(cfg.dq_where_clause,'X')        = NVL(target.dq_where_clause,'X')
                     and NVL(cfg.dq_join,'X')                = NVL(target.dq_join,'X')
                     and cfg.dq_method                       = target.dq_method 
                  );
                  
merge into DQ_USER.t_meta_table_dq target
   using
     ( select   
             cfg.table_id
            ,cfg.dq_purpose
            ,cfg.dq_corrective_action
            ,cfg.dq_contact_team
            ,cfg.dq_severity_id
            ,cfg.dq_rule_type
            ,cfg.dq_rule_category
            ,cfg.dq_method
            ,cfg.dq_message_id
            ,cfg.dq_function_id
            ,cfg.dq_function_parameters
            ,cfg.dq_where_clause
            ,cfg.dq_join
            ,cfg.dq_condition_id
            ,cfg.dq_column_name
            ,cfg.dq_active_indicator
            ,cfg.dq_user_role
            ,cfg.last_updated
            ,cfg.user_id
          from DQ_USER.t_meta_table_dq_cfg cfg
         inner join DQ_USER.t_meta_table_dq target
          on cfg.dq_use_case_id                  = target.dq_use_case_id 
         and cfg.table_id                        = target.table_id 
         and cfg.dq_column_name                  = target.dq_column_name 
         and NVL(cfg.dq_function_parameters,'X') = NVL(target.dq_function_parameters,'X')
         and NVL(cfg.dq_where_clause,'X')        = NVL(target.dq_where_clause,'X')
         and NVL(cfg.dq_join,'X')                = NVL(target.dq_join,'X')
         and cfg.dq_method                       = target.dq_method
         and (
            nvl(target.dq_purpose                         , '~')          <> nvl(cfg.dq_purpose                         , '~'         ) or
            nvl(target.dq_corrective_action               , '~')          <> nvl(cfg.dq_corrective_action               , '~'         ) or
            nvl(target.dq_contact_team                    , '~')          <> nvl(cfg.dq_contact_team                    , '~'         ) or
            nvl(target.dq_severity_id                     ,  -1)          <> nvl(cfg.dq_severity_id                     ,  -1         ) or
            nvl(target.dq_rule_type                       , '~')          <> nvl(cfg.dq_rule_type                       , '~'         ) or
            nvl(target.dq_rule_category                   , '~')          <> nvl(cfg.dq_rule_category                   , '~'         ) or
            nvl(target.dq_function_id                     ,  -1)          <> nvl(cfg.dq_function_id                     ,  -1         ) or
            nvl(target.dq_message_id                     ,  -1)           <> nvl(cfg.dq_message_id                      ,  -1         ) or
            nvl(target.dq_condition_id                    ,  -1)          <> nvl(cfg.dq_condition_id                    ,  -1         ) or
            nvl(target.dq_active_indicator                , '~')          <> nvl(cfg.dq_active_indicator                , '~'         ) or
            nvl(target.dq_user_role                       , '~')          <> nvl(cfg.dq_user_role                       , '~'         ) or
            nvl(to_char(target.last_updated,'DD/MM/YYYY') , '01/01/2000') <> nvl(to_char(cfg.last_updated,'DD/MM/YYYY') , '01/01/2000') or
            nvl(target.user_id                            , '~')          <> nvl(cfg.user_id                            , '~'         )
              )
        union all
         select   
             cfg.table_id
            ,cfg.dq_purpose
            ,cfg.dq_corrective_action
            ,cfg.dq_contact_team
            ,cfg.dq_severity_id
            ,cfg.dq_rule_type
            ,cfg.dq_rule_category
            ,cfg.dq_method
            ,cfg.dq_message_id
            ,cfg.dq_function_id
            ,cfg.dq_function_parameters
            ,cfg.dq_where_clause
            ,cfg.dq_join
            ,cfg.dq_condition_id
            ,cfg.dq_column_name
            ,cfg.dq_active_indicator
            ,cfg.dq_user_role
            ,cfg.last_updated
            ,cfg.user_id
         from DQ_USER.t_meta_table_dq_cfg cfg
         where not exists (select 1 from DQ_USER.t_meta_table_dq target 
                            where cfg.dq_use_case_id                  = target.dq_use_case_id 
                              and cfg.table_id                        = target.table_id 
                              and cfg.dq_column_name                  = target.dq_column_name 
                              and NVL(cfg.dq_function_parameters,'X') = NVL(target.dq_function_parameters,'X')
                              and NVL(cfg.dq_where_clause,'X')        = NVL(target.dq_where_clause,'X')
                              and NVL(cfg.dq_join,'X')                = NVL(target.dq_join,'X')
                              and cfg.dq_method                       = target.dq_method )
         ) cfg
  on (     cfg.dq_use_case_id                  = target.dq_use_case_id 
       and cfg.table_id                        = target.table_id 
       and cfg.dq_column_name                  = target.dq_column_name 
       and NVL(cfg.dq_function_parameters,'X') = NVL(target.dq_function_parameters,'X')
       and NVL(cfg.dq_where_clause,'X')        = NVL(target.dq_where_clause,'X')
       and NVL(cfg.dq_join,'X')                = NVL(target.dq_join,'X')
       and cfg.dq_method                       = target.dq_method )
  when matched 
  then 
    update set 
              target.dq_purpose             = cfg.dq_purpose
             ,target.dq_corrective_action   = cfg.dq_corrective_action
             ,target.dq_contact_team        = cfg.dq_contact_team
             ,target.dq_severity_id         = cfg.dq_severity_id
             ,target.dq_rule_type           = cfg.dq_rule_type
             ,target.dq_rule_category       = cfg.dq_rule_category
             ,target.dq_function_id         = cfg.dq_function_id
             ,target.dq_message_id          = cfg.dq_message_id
             ,target.dq_condition_id        = cfg.dq_condition_id
             ,target.dq_active_indicator    = cfg.dq_active_indicator
             ,target.dq_user_role           = cfg.dq_user_role
             ,target.last_updated           = sysdate
             ,target.user_id                = cfg.user_id

    when not matched then insert 
    (         target.table_id
             ,target.dq_purpose
             ,target.dq_corrective_action
             ,target.dq_contact_team
             ,target.dq_severity_id
             ,target.dq_rule_type
             ,target.dq_rule_category
             ,target.dq_method
             ,target.dq_message_id
             ,target.dq_function_id
             ,target.dq_function_parameters
             ,target.dq_where_clause
             ,target.dq_join
             ,target.dq_condition_id
             ,target.dq_column_name
             ,target.dq_active_indicator
             ,target.dq_user_role
             ,target.create_date
             ,target.last_updated
             ,target.user_id
      ) values 
 
         (
              cfg.table_id
             ,cfg.dq_purpose
             ,cfg.dq_corrective_action
             ,cfg.dq_contact_team
             ,cfg.dq_severity_id
             ,cfg.dq_rule_type
             ,cfg.dq_rule_category
             ,cfg.dq_method
             ,cfg.dq_message_id
             ,cfg.dq_function_id
             ,cfg.dq_function_parameters
             ,cfg.dq_where_clause
             ,cfg.dq_join
             ,cfg.dq_condition_id
             ,cfg.dq_column_name
             ,cfg.dq_active_indicator
             ,cfg.dq_user_role
             ,sysdate
             ,sysdate
             ,cfg.user_id
         ); 
commit;

prompt dropping temporary config table DQ_USER.t_meta_table_dq_cfg

begin
  execute immediate 'drop table DQ_USER.t_meta_table_dq_cfg';
end;
/
SET DEFINE ON;

commit;




set define on

commit;